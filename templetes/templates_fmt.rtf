{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fmodern Courier New;}}
{\colortbl\red0\green0\blue0;\red255\green255\blue255;\red200\green200\blue200;\red0\green0\blue0;\red160\green160\blue160;\red190\green190\blue230;\red128\green128\blue255;\red0\green128\blue128;\red128\green0\blue0;\red240\green0\blue240;\red240\green200\blue240;\red0\green0\blue160;\red135\green135\blue200;\red0\green160\blue0;\red154\green200\blue154;\red190\green0\blue190;\red190\green137\blue190;\red0\green0\blue255;\red190\green190\blue255;\red224\green160\blue0;\red224\green206\blue159;\red132\green160\blue132;\red255\green0\blue0;\red255\green200\blue200;\red128\green255\blue255;\red64\green64\blue128;\red133\green133\blue172;}
{\info{\comment Generated by the Code::Blocks RTF Exporter plugin}
{\title Untitled}}

\deflang1033\pard\plain\f0\fs16 \cb1\cf0 
\par \cb1\cf0 双连通分量
\par \cb3\cf11\b int \b0\cb1\cf0 pre\cb3\cf22 [\cb1\cf0 maxn\cb3\cf22 ], \cb1\cf0 iscur\cb3\cf22 [\cb1\cf0 maxn\cb3\cf22 ], \cb1\cf0 bccno\cb3\cf22 [\cb1\cf0 maxn\cb3\cf22 ], \cb1\cf0 dfs_clock\cb3\cf22 , \cb1\cf0 bcc_cnt\cb3\cf22 ;
\par \cb3\cf13\b vector\b0\cb3\cf22 <\cb3\cf11\b int\b0\cb3\cf22 > \cb1\cf0 G\cb3\cf22 [\cb1\cf0 maxn\cb3\cf22 ], \cb1\cf0 bcc\cb3\cf22 [\cb1\cf0 maxn\cb3\cf22 ];
\par 
\par \cb3\cf13\b stack\b0\cb3\cf22 <\cb1\cf0 edge\cb3\cf22 > \cb1\cf0 s\cb3\cf22 ;
\par \cb3\cf11\b int \b0\cb1\cf0 dfs\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 u\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 fa\cb3\cf22 )
\par \{
\par     \cb3\cf11\b int \b0\cb1\cf0 lowu \cb3\cf22 = \cb1\cf0 pre\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ] = ++\cb1\cf0 dfs_clock\cb3\cf22 ;
\par     \cb3\cf11\b int \b0\cb1\cf0 child \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ;
\par     \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 0 \cb3\cf22 ; \cb1\cf0 i \cb3\cf22 < \cb1\cf0 G\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ].\cb3\cf13\b size\b0\cb3\cf22 ();\cb1\cf0 i\cb3\cf22 ++)
\par     \{
\par         \cb3\cf11\b int \b0\cb1\cf0 v\cb3\cf22 = \cb1\cf0 G\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ][\cb1\cf0 i\cb3\cf22 ];
\par         \cb1\cf0 edge e \cb3\cf22 = (\cb1\cf0 edge\cb3\cf22 ) \{\cb1\cf0 u\cb3\cf22 , \cb1\cf0 v\cb3\cf22 \};
\par         \cb3\cf11\b if\b0\cb3\cf22 (!\cb1\cf0 pre\cb3\cf22 [\cb1\cf0 v\cb3\cf22 ])
\par         \{
\par             \cb1\cf0 s\cb3\cf22 .\cb1\cf0 push\cb3\cf22 (\cb1\cf0 e\cb3\cf22 );
\par             \cb1\cf0 child\cb3\cf22 ++;
\par             \cb3\cf11\b int \b0\cb1\cf0 lowv \cb3\cf22 = \cb1\cf0 dfs\cb3\cf22 (\cb1\cf0 v\cb3\cf22 , \cb1\cf0 u\cb3\cf22 );
\par             \cb1\cf0 lowu \cb3\cf22 = \cb3\cf13\b min\b0\cb3\cf22 (\cb1\cf0 lowu\cb3\cf22 , \cb1\cf0 lowv\cb3\cf22 );
\par             \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 lowv \cb3\cf22 >= \cb1\cf0 pre\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ])
\par             \{
\par                 \cb1\cf0 iscut\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ] = \cb3\cf11\b true\b0\cb3\cf22 ;
\par                 \cb1\cf0 bcc_cnt\cb3\cf22 ++;
\par                 \cb1\cf0 bcc\cb3\cf22 [\cb1\cf0 bcc_cnt\cb3\cf22 ].\cb3\cf13\b clear\b0\cb3\cf22 ();
\par                 \cb3\cf11\b for\b0\cb3\cf22 (;;)
\par                 \{
\par                     \cb1\cf0 edge x \cb3\cf22 = \cb1\cf0 s\cb3\cf22 .\cb1\cf0 top\cb3\cf22 (); \cb1\cf0 s\cb3\cf22 .\cb1\cf0 pop\cb3\cf22 ();
\par                     \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 bccno\cb3\cf22 [\cb1\cf0 x\cb3\cf22 .\cb1\cf0 u\cb3\cf22 ] != \cb1\cf0 bcc_cnt\cb3\cf22 )
\par                     \{
\par                         \cb1\cf0 bcc\cb3\cf22 [\cb1\cf0 bcc_cnt\cb3\cf22 ].\cb3\cf13\b push_back\b0\cb3\cf22 (\cb1\cf0 x\cb3\cf22 .\cb1\cf0 u\cb3\cf22 );
\par                         \cb1\cf0 bccno\cb3\cf22 [\cb1\cf0 x\cb3\cf22 .\cb1\cf0 u\cb3\cf22 ] = \cb1\cf0 bcc_cnt\cb3\cf22 ;
\par                     \}
\par                     \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 bccno\cb3\cf22 [\cb1\cf0 x\cb3\cf22 .\cb1\cf0 v\cb3\cf22 ] != \cb1\cf0 bcc_cnt\cb3\cf22 )
\par                     \{
\par                         \cb1\cf0 bcc\cb3\cf22 [\cb1\cf0 bcc_cnt\cb3\cf22 ].\cb3\cf13\b push_back\b0\cb3\cf22 (\cb1\cf0 x\cb3\cf22 .\cb1\cf0 v\cb3\cf22 );
\par                         \cb1\cf0 bccno\cb3\cf22 [\cb1\cf0 x\cb3\cf22 .\cb1\cf0 v\cb3\cf22 ] = \cb1\cf0 bcc_cnt\cb3\cf22 ;
\par                     \}
\par                     \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 x\cb3\cf22 .\cb1\cf0 u \cb3\cf22 == \cb1\cf0 u \cb3\cf22 && \cb1\cf0 x\cb3\cf22 .\cb1\cf0 v \cb3\cf22 == \cb1\cf0 v\cb3\cf22 )
\par                     \{
\par                         \cb3\cf11\b break\b0\cb3\cf22 ;
\par                     \}
\par                 \}
\par             \}
\par             \cb3\cf11\b else if\b0\cb3\cf22 (\cb1\cf0 pre\cb3\cf22 [\cb1\cf0 v\cb3\cf22 ] < \cb1\cf0 pre\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ] && \cb1\cf0 v \cb3\cf22 != \cb1\cf0 fa\cb3\cf22 )
\par             \{
\par                 \cb1\cf0 S\cb3\cf22 .\cb1\cf0 push\cb3\cf22 (\cb1\cf0 e\cb3\cf22 );
\par                 \cb1\cf0 lowu \cb3\cf22 = \cb3\cf13\b min\b0\cb3\cf22 (\cb1\cf0 lowu\cb3\cf22 , \cb1\cf0 pre\cb3\cf22 [\cb1\cf0 v\cb3\cf22 ]);
\par             \}
\par         \}
\par         \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 fa \cb3\cf22 < \cb3\cf9 0 \cb3\cf22 && \cb1\cf0 child \cb3\cf22 == \cb3\cf9 1\cb3\cf22 )
\par         \{
\par             \cb1\cf0 iscut\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ] = \cb3\cf9 0\cb3\cf22 ;
\par         \}
\par     \}
\par     \cb3\cf11\b return \b0\cb1\cf0 lowu\cb3\cf22 ;
\par \}
\par \cb3\cf11\b void \b0\cb1\cf0 find_bcc\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 u\cb3\cf22 )
\par \{
\par     \cb1\cf0 memset\cb3\cf22 (\cb1\cf0 pre\cb3\cf22 , \cb3\cf9 0\cb3\cf22 , \cb3\cf11\b sizeof\b0\cb3\cf22 (\cb1\cf0 pre\cb3\cf22 ));
\par     \cb1\cf0 memset\cb3\cf22 (\cb1\cf0 iscut\cb3\cf22 , \cb3\cf9 0\cb3\cf22 , \cb3\cf11\b sizeof\b0\cb3\cf22 (\cb1\cf0 iscut\cb3\cf22 ));
\par     \cb1\cf0 memset\cb3\cf22 (\cb1\cf0 bccno\cb3\cf22 , \cb3\cf9 0\cb3\cf22 , \cb3\cf11\b sizeof\b0\cb3\cf22 (\cb1\cf0 bccno\cb3\cf22 ));
\par     \cb1\cf0 dfs_clock \cb3\cf22 = \cb1\cf0 bcc_cnt \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ;
\par     \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 < \cb1\cf0 n\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par     \{
\par         \cb3\cf11\b if\b0\cb3\cf22 (!\cb1\cf0 pre\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]) \cb1\cf0 dfs\cb3\cf22 (\cb1\cf0 i\cb3\cf22 , -\cb3\cf9 1\cb3\cf22 );
\par     \}
\par \}
\par 
\par \cb1\cf0 树状数组BIT
\par 
\par \cb3\cf13 #include<cstdio>
\par \cb3\cf11\b using namespace \b0\cb3\cf13\b std\b0\cb3\cf22 ;
\par \cb3\cf11\b const int \b0\cb1\cf0 maxn \cb3\cf22 = \cb3\cf9 10000\cb3\cf22 ;
\par \cb3\cf11\b int \b0\cb1\cf0 n\cb3\cf22 ;
\par \cb3\cf11\b int \b0\cb1\cf0 C\cb3\cf22 [\cb1\cf0 maxn\cb3\cf22 ];
\par \cb3\cf11\b int \b0\cb1\cf0 lsb\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 x\cb3\cf22 )
\par \{
\par     \cb3\cf11\b return \b0\cb1\cf0 x\cb3\cf22 &(-\cb1\cf0 x\cb3\cf22 );
\par \}
\par \cb3\cf11\b int \b0\cb1\cf0 sum\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 x\cb3\cf22 )
\par \{
\par     \cb3\cf11\b int \b0\cb1\cf0 ret \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ;
\par     \cb3\cf11\b while\b0\cb3\cf22 (\cb1\cf0 x \cb3\cf22 > \cb3\cf9 0\cb3\cf22 )
\par     \{
\par         \cb1\cf0 ret \cb3\cf22 += \cb1\cf0 C\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ];
\par         \cb1\cf0 x\cb3\cf22 -=\cb1\cf0 lsb\cb3\cf22 (\cb1\cf0 x\cb3\cf22 );
\par     \}
\par     \cb3\cf11\b return \b0\cb1\cf0 ret\cb3\cf22 ;
\par \}
\par \cb3\cf11\b void \b0\cb1\cf0 add\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 x\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 d\cb3\cf22 )
\par \{
\par     \cb3\cf11\b while\b0\cb3\cf22 (\cb1\cf0 x \cb3\cf22 <= \cb1\cf0 n\cb3\cf22 )
\par     \{
\par         \cb1\cf0 C\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ] += \cb1\cf0 d\cb3\cf22 ;
\par         \cb1\cf0 x \cb3\cf22 += \cb1\cf0 lsb\cb3\cf22 (\cb1\cf0 x\cb3\cf22 );
\par     \}
\par \}
\par \cb3\cf4 /* ***********************************************
\par Author        :kuangbin
\par 横纵坐标都从1开始
\par 外部调用dance(0)
\par ansd为ans数组的size
\par ans数组存了答案
\par 
\par ************************************************ */
\par \cb3\cf13 #define _CRT_SECURE_NO_WARNINGS
\par #include <stdio.h>
\par #include <string.h>
\par #include <iostream>
\par #include <algorithm>
\par #include <vector>
\par #include <queue>
\par #include <set>
\par #include <map>
\par #include <string>
\par #include <math.h>
\par #include <stdlib.h>
\par #include <time.h>
\par \cb3\cf11\b using namespace \b0\cb3\cf13\b std\b0\cb3\cf22 ;
\par \cb3\cf11\b const int \b0\cb1\cf0 maxnode \cb3\cf22 = \cb3\cf9 100010\cb3\cf22 ;
\par \cb3\cf11\b const int \b0\cb1\cf0 MaxM \cb3\cf22 = \cb3\cf9 1010\cb3\cf22 ;
\par \cb3\cf11\b const int \b0\cb1\cf0 MaxN \cb3\cf22 = \cb3\cf9 1010\cb3\cf22 ;
\par \cb3\cf5 //精确覆盖
\par \cb3\cf11\b struct \b0\cb1\cf0 DLX
\par \cb3\cf22 \{
\par     \cb3\cf11\b int \b0\cb1\cf0 n\cb3\cf22 ,\cb1\cf0 m\cb3\cf22 ,\cb3\cf13\b size\b0\cb3\cf22 ;
\par     \cb3\cf11\b int \b0\cb1\cf0 U\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ],\cb1\cf0 D\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ],\cb1\cf0 R\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ],\cb1\cf0 L\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ],\cb1\cf0 Row\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ],\cb1\cf0 Col\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ];
\par     \cb3\cf11\b int \b0\cb1\cf0 H\cb3\cf22 [\cb1\cf0 MaxN\cb3\cf22 ], \cb1\cf0 S\cb3\cf22 [\cb1\cf0 MaxM\cb3\cf22 ];
\par     \cb3\cf11\b int \b0\cb1\cf0 ansd\cb3\cf22 , \cb1\cf0 ans\cb3\cf22 [\cb1\cf0 MaxN\cb3\cf22 ];
\par     \cb3\cf11\b void \b0\cb1\cf0 init\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 _n\cb3\cf22 ,\cb3\cf11\b int \b0\cb1\cf0 _m\cb3\cf22 )
\par     \{
\par         \cb1\cf0 n \cb3\cf22 = \cb1\cf0 _n\cb3\cf22 ;
\par         \cb1\cf0 m \cb3\cf22 = \cb1\cf0 _m\cb3\cf22 ;
\par         \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ;\cb1\cf0 i \cb3\cf22 <= \cb1\cf0 m\cb3\cf22 ;\cb1\cf0 i\cb3\cf22 ++)
\par         \{
\par             \cb1\cf0 S\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = \cb3\cf9 0\cb3\cf22 ;
\par             \cb1\cf0 U\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = \cb1\cf0 i\cb3\cf22 ;
\par             \cb1\cf0 L\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = \cb1\cf0 i\cb3\cf22 -\cb3\cf9 1\cb3\cf22 ;
\par             \cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = \cb1\cf0 i\cb3\cf22 +\cb3\cf9 1\cb3\cf22 ;
\par         \}
\par         \cb1\cf0 R\cb3\cf22 [\cb1\cf0 m\cb3\cf22 ] = \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 L\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ] = \cb1\cf0 m\cb3\cf22 ;
\par         \cb3\cf13\b size \b0\cb3\cf22 = \cb1\cf0 m\cb3\cf22 ;
\par         \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 1\cb3\cf22 ;\cb1\cf0 i \cb3\cf22 <= \cb1\cf0 n\cb3\cf22 ;\cb1\cf0 i\cb3\cf22 ++)
\par             \cb1\cf0 H\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = -\cb3\cf9 1\cb3\cf22 ;
\par     \}
\par     \cb3\cf11\b void \b0\cb1\cf0 Link\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 r\cb3\cf22 ,\cb3\cf11\b int \b0\cb1\cf0 c\cb3\cf22 )
\par     \{
\par         ++\cb1\cf0 S\cb3\cf22 [\cb1\cf0 Col\cb3\cf22 [++\cb3\cf13\b size\b0\cb3\cf22 ]=\cb1\cf0 c\cb3\cf22 ];
\par         \cb1\cf0 Row\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 r\cb3\cf22 ;
\par         \cb1\cf0 D\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ];
\par         \cb1\cf0 U\cb3\cf22 [\cb1\cf0 D\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ]] = \cb3\cf13\b size\b0\cb3\cf22 ;
\par         \cb1\cf0 U\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 c\cb3\cf22 ;
\par         \cb1\cf0 D\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ] = \cb3\cf13\b size\b0\cb3\cf22 ;
\par         \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 H\cb3\cf22 [\cb1\cf0 r\cb3\cf22 ] < \cb3\cf9 0\cb3\cf22 )\cb1\cf0 H\cb3\cf22 [\cb1\cf0 r\cb3\cf22 ] = \cb1\cf0 L\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 R\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb3\cf13\b size\b0\cb3\cf22 ;
\par         \cb3\cf11\b else
\par         \b0\cb3\cf22 \{
\par             \cb1\cf0 R\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 H\cb3\cf22 [\cb1\cf0 r\cb3\cf22 ]];
\par             \cb1\cf0 L\cb3\cf22 [\cb1\cf0 R\cb3\cf22 [\cb1\cf0 H\cb3\cf22 [\cb1\cf0 r\cb3\cf22 ]]] = \cb3\cf13\b size\b0\cb3\cf22 ;
\par             \cb1\cf0 L\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 H\cb3\cf22 [\cb1\cf0 r\cb3\cf22 ];
\par             \cb1\cf0 R\cb3\cf22 [\cb1\cf0 H\cb3\cf22 [\cb1\cf0 r\cb3\cf22 ]] = \cb3\cf13\b size\b0\cb3\cf22 ;
\par         \}
\par     \}
\par     \cb3\cf11\b void \b0\cb3\cf13\b remove\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 c\cb3\cf22 )
\par     \{
\par         \cb1\cf0 L\cb3\cf22 [\cb1\cf0 R\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ]] = \cb1\cf0 L\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ]; \cb1\cf0 R\cb3\cf22 [\cb1\cf0 L\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ]] = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ];
\par         \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ];\cb1\cf0 i \cb3\cf22 != \cb1\cf0 c\cb3\cf22 ;\cb1\cf0 i \cb3\cf22 = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ])
\par             \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 j \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ];\cb1\cf0 j \cb3\cf22 != \cb1\cf0 i\cb3\cf22 ;\cb1\cf0 j \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ])
\par             \{
\par                 \cb1\cf0 U\cb3\cf22 [\cb1\cf0 D\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ]] = \cb1\cf0 U\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ];
\par                 \cb1\cf0 D\cb3\cf22 [\cb1\cf0 U\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ]] = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ];
\par                 --\cb1\cf0 S\cb3\cf22 [\cb1\cf0 Col\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ]];
\par             \}
\par     \}
\par     \cb3\cf11\b void \b0\cb1\cf0 resume\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 c\cb3\cf22 )
\par     \{
\par         \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb1\cf0 U\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ];\cb1\cf0 i \cb3\cf22 != \cb1\cf0 c\cb3\cf22 ;\cb1\cf0 i \cb3\cf22 = \cb1\cf0 U\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ])
\par             \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 j \cb3\cf22 = \cb1\cf0 L\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ];\cb1\cf0 j \cb3\cf22 != \cb1\cf0 i\cb3\cf22 ;\cb1\cf0 j \cb3\cf22 = \cb1\cf0 L\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ])
\par                 ++\cb1\cf0 S\cb3\cf22 [\cb1\cf0 Col\cb3\cf22 [\cb1\cf0 U\cb3\cf22 [\cb1\cf0 D\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ]]=\cb1\cf0 D\cb3\cf22 [\cb1\cf0 U\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ]]=\cb1\cf0 j\cb3\cf22 ]];
\par         \cb1\cf0 L\cb3\cf22 [\cb1\cf0 R\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ]] = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 L\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ]] = \cb1\cf0 c\cb3\cf22 ;
\par     \}
\par     \cb3\cf5 //d为递归深度
\par     \cb3\cf11\b bool \b0\cb1\cf0 Dance\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 d\cb3\cf22 )
\par     \{
\par         \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 R\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ] == \cb3\cf9 0\cb3\cf22 )
\par         \{
\par             \cb1\cf0 ansd \cb3\cf22 = \cb1\cf0 d\cb3\cf22 ;
\par             \cb3\cf11\b return true\b0\cb3\cf22 ;
\par         \}
\par         \cb3\cf11\b int \b0\cb1\cf0 c \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ];
\par         \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ];\cb1\cf0 i \cb3\cf22 != \cb3\cf9 0\cb3\cf22 ;\cb1\cf0 i \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ])
\par             \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 S\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] < \cb1\cf0 S\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ])
\par                 \cb1\cf0 c \cb3\cf22 = \cb1\cf0 i\cb3\cf22 ;
\par         \cb3\cf13\b remove\b0\cb3\cf22 (\cb1\cf0 c\cb3\cf22 );
\par         \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ];\cb1\cf0 i \cb3\cf22 != \cb1\cf0 c\cb3\cf22 ;\cb1\cf0 i \cb3\cf22 = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ])
\par         \{
\par             \cb1\cf0 ans\cb3\cf22 [\cb1\cf0 d\cb3\cf22 ] = \cb1\cf0 Row\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ];
\par             \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 j \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]; \cb1\cf0 j \cb3\cf22 != \cb1\cf0 i\cb3\cf22 ;\cb1\cf0 j \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ])\cb3\cf13\b remove\b0\cb3\cf22 (\cb1\cf0 Col\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ]);
\par             \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 Dance\cb3\cf22 (\cb1\cf0 d\cb3\cf22 +\cb3\cf9 1\cb3\cf22 ))\cb3\cf11\b return true\b0\cb3\cf22 ;
\par             \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 j \cb3\cf22 = \cb1\cf0 L\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]; \cb1\cf0 j \cb3\cf22 != \cb1\cf0 i\cb3\cf22 ;\cb1\cf0 j \cb3\cf22 = \cb1\cf0 L\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ])\cb1\cf0 resume\cb3\cf22 (\cb1\cf0 Col\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ]);
\par         \}
\par         \cb1\cf0 resume\cb3\cf22 (\cb1\cf0 c\cb3\cf22 );
\par         \cb3\cf11\b return false\b0\cb3\cf22 ;
\par     \}
\par \};
\par 
\par \cb1\cf0 DLX g\cb3\cf22 ;
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par \cb3\cf5 //重复覆盖
\par //K为最大递归深度
\par \cb3\cf4 /* ***********************************************
\par Author        :kuangbin
\par 横纵坐标都从1开始
\par 外部调用dance(0)
\par ansd为ans数组的size
\par ans数组存了答案
\par ************************************************ */
\par \cb3\cf13 #define _CRT_SECURE_NO_WARNINGS
\par #include <stdio.h>
\par #include<functional>
\par #include <string.h>
\par #include <iostream>
\par #include <algorithm>
\par #include <vector>
\par #include <queue>
\par #include <set>
\par #include <map>
\par #include <string>
\par #include <math.h>
\par #include <stdlib.h>
\par #include <time.h>
\par \cb3\cf11\b using namespace \b0\cb3\cf13\b std\b0\cb3\cf22 ;
\par \cb3\cf11\b const int \b0\cb1\cf0 inf \cb3\cf22 = \cb3\cf9 0x3f3f3f3f\cb3\cf22 ;
\par \cb3\cf11\b const int \b0\cb1\cf0 maxnode \cb3\cf22 = \cb3\cf9 100010\cb3\cf22 ;
\par \cb3\cf11\b const int \b0\cb1\cf0 maxn \cb3\cf22 = \cb3\cf9 1010\cb3\cf22 ;
\par \cb3\cf11\b const int \b0\cb1\cf0 MaxN \cb3\cf22 = \cb3\cf9 1010\cb3\cf22 ;
\par 
\par \cb3\cf11\b struct \b0\cb1\cf0 DLX
\par \cb3\cf22 \{
\par     \cb3\cf11\b int \b0\cb1\cf0 n\cb3\cf22 , \cb1\cf0 m\cb3\cf22 , \cb3\cf13\b size\b0\cb3\cf22 ;
\par     \cb3\cf11\b int \b0\cb1\cf0 U\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ], \cb1\cf0 D\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ], \cb1\cf0 R\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ], \cb1\cf0 L\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ];
\par     \cb3\cf11\b int \b0\cb1\cf0 Row\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ], \cb1\cf0 Col\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ];
\par     \cb3\cf11\b int \b0\cb1\cf0 H\cb3\cf22 [\cb1\cf0 MaxN\cb3\cf22 ], \cb1\cf0 S\cb3\cf22 [\cb1\cf0 MaxN\cb3\cf22 ];
\par     \cb3\cf11\b int \b0\cb1\cf0 ansd\cb3\cf22 , \cb1\cf0 ans\cb3\cf22 [\cb1\cf0 MaxN\cb3\cf22 ];
\par     \cb3\cf11\b int \b0\cb1\cf0 K\cb3\cf22 ;
\par     \cb3\cf11\b void \b0\cb1\cf0 init\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 _n\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 _m\cb3\cf22 )
\par     \{
\par         \cb1\cf0 n \cb3\cf22 = \cb1\cf0 _n\cb3\cf22 ;
\par         \cb1\cf0 m \cb3\cf22 = \cb1\cf0 _m\cb3\cf22 ;
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 <= \cb1\cf0 m\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par         \{
\par             \cb1\cf0 U\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = \cb1\cf0 i\cb3\cf22 ;
\par             \cb1\cf0 L\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = \cb1\cf0 i \cb3\cf22 - \cb3\cf9 1\cb3\cf22 ;
\par             \cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = \cb1\cf0 i \cb3\cf22 + \cb3\cf9 1\cb3\cf22 ;
\par             \cb1\cf0 S\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = \cb3\cf9 0\cb3\cf22 ;
\par         \}
\par         \cb1\cf0 R\cb3\cf22 [\cb1\cf0 m\cb3\cf22 ] = \cb3\cf9 0\cb3\cf22 ;
\par         \cb1\cf0 L\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ] = \cb1\cf0 m\cb3\cf22 ;
\par         \cb3\cf13\b size \b0\cb3\cf22 = \cb1\cf0 m\cb3\cf22 ;
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 1\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 <= \cb1\cf0 n\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par         \{
\par             \cb1\cf0 H\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = -\cb3\cf9 1\cb3\cf22 ;
\par         \}
\par 
\par     \}
\par     \cb3\cf11\b void \b0\cb1\cf0 Link\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 r\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 c\cb3\cf22 )
\par     \{
\par         \cb1\cf0 S\cb3\cf22 [\cb1\cf0 Col\cb3\cf22 [++\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 c\cb3\cf22 ]++;
\par         \cb1\cf0 Row\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 r\cb3\cf22 ;
\par         \cb1\cf0 U\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 U\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ];
\par         \cb1\cf0 D\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 c\cb3\cf22 ;
\par         \cb1\cf0 D\cb3\cf22 [\cb1\cf0 U\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ]] = \cb3\cf13\b size\b0\cb3\cf22 ;
\par         \cb1\cf0 U\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ] = \cb3\cf13\b size\b0\cb3\cf22 ;
\par         \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 H\cb3\cf22 [\cb1\cf0 r\cb3\cf22 ] == -\cb3\cf9 1\cb3\cf22 )
\par         \{
\par             \cb1\cf0 H\cb3\cf22 [\cb1\cf0 r\cb3\cf22 ] = \cb1\cf0 R\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 L\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb3\cf13\b size\b0\cb3\cf22 ;
\par         \}
\par         \cb3\cf11\b else
\par         \b0\cb3\cf22 \{
\par             \cb1\cf0 R\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 H\cb3\cf22 [\cb1\cf0 r\cb3\cf22 ];
\par             \cb1\cf0 L\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 L\cb3\cf22 [\cb1\cf0 H\cb3\cf22 [\cb1\cf0 r\cb3\cf22 ]];
\par             \cb1\cf0 R\cb3\cf22 [\cb1\cf0 L\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ]] = \cb3\cf13\b size\b0\cb3\cf22 ;
\par             \cb1\cf0 L\cb3\cf22 [\cb1\cf0 H\cb3\cf22 [\cb1\cf0 r\cb3\cf22 ]] = \cb3\cf13\b size\b0\cb3\cf22 ;
\par         \}
\par     \}
\par     \cb3\cf11\b void \b0\cb3\cf13\b remove\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 c\cb3\cf22 )
\par     \{
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ]; \cb1\cf0 i \cb3\cf22 != \cb1\cf0 c\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ])
\par         \{
\par             \cb1\cf0 L\cb3\cf22 [\cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]] = \cb1\cf0 L\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ];
\par             \cb1\cf0 R\cb3\cf22 [\cb1\cf0 L\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]] = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ];
\par         \}
\par     \}
\par     \cb3\cf11\b void \b0\cb1\cf0 resume\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 c\cb3\cf22 )
\par     \{
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb1\cf0 U\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ]; \cb1\cf0 i \cb3\cf22 != \cb1\cf0 c\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 = \cb1\cf0 U\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ])
\par         \{
\par             \cb1\cf0 R\cb3\cf22 [\cb1\cf0 L\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]] = \cb1\cf0 L\cb3\cf22 [\cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]] = \cb1\cf0 i\cb3\cf22 ;
\par         \}
\par     \}
\par     \cb3\cf11\b bool \b0\cb1\cf0 v\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ];
\par     \cb3\cf11\b int \b0\cb1\cf0 h\cb3\cf22 ()
\par     \{
\par         \cb3\cf11\b int \b0\cb1\cf0 ret \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ;
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 c \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ]; \cb1\cf0 c \cb3\cf22 != \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 c \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ]) \cb1\cf0 v\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ] = \cb3\cf11\b true\b0\cb3\cf22 ;
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 c \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ]; \cb1\cf0 c \cb3\cf22 != \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 c \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ])
\par         \{
\par             \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 v\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ])
\par             \{
\par                 \cb1\cf0 ret\cb3\cf22 ++;
\par                 \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ]; \cb1\cf0 i \cb3\cf22 != \cb1\cf0 c\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ])
\par                 \{
\par                     \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 j \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]; \cb1\cf0 j \cb3\cf22 != \cb1\cf0 i\cb3\cf22 ; \cb1\cf0 j \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ])
\par                     \{
\par                         \cb1\cf0 v\cb3\cf22 [\cb1\cf0 Col\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ]] = \cb3\cf11\b false\b0\cb3\cf22 ;
\par                     \}
\par                 \}
\par             \}
\par         \}
\par         \cb3\cf11\b return \b0\cb1\cf0 ret\cb3\cf22 ;
\par     \}
\par     \cb3\cf11\b bool \b0\cb1\cf0 dance\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 d\cb3\cf22 )
\par     \{
\par         \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 d \cb3\cf22 + \cb1\cf0 h\cb3\cf22 () > \cb1\cf0 K\cb3\cf22 )
\par         \{
\par             \cb3\cf11\b return false\b0\cb3\cf22 ;
\par         \}
\par         \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 R\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ] == \cb3\cf9 0\cb3\cf22 )
\par         \{
\par             \cb3\cf11\b return \b0\cb1\cf0 d \cb3\cf22 <= \cb1\cf0 K\cb3\cf22 ;
\par         \}
\par         \cb3\cf11\b int \b0\cb1\cf0 c \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ];
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ]; \cb1\cf0 i \cb3\cf22 != \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ])
\par         \{
\par             \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 S\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] < \cb1\cf0 S\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ])
\par             \{
\par                 \cb1\cf0 c \cb3\cf22 = \cb1\cf0 i\cb3\cf22 ;
\par             \}
\par         \}
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ]; \cb1\cf0 i \cb3\cf22 != \cb1\cf0 c\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ])
\par         \{
\par             \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 j \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]; \cb1\cf0 j \cb3\cf22 != \cb1\cf0 i\cb3\cf22 ; \cb1\cf0 j \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ])
\par             \{
\par                 \cb3\cf13\b remove\b0\cb3\cf22 (\cb1\cf0 j\cb3\cf22 );
\par             \}
\par             \cb3\cf13\b remove\b0\cb3\cf22 (\cb1\cf0 i\cb3\cf22 );
\par             \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 dance\cb3\cf22 (\cb1\cf0 d \cb3\cf22 + \cb3\cf9 1\cb3\cf22 )) \cb3\cf11\b return true\b0\cb3\cf22 ;
\par             \cb1\cf0 resume\cb3\cf22 (\cb1\cf0 i\cb3\cf22 );
\par             \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 j \cb3\cf22 = \cb1\cf0 L\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]; \cb1\cf0 j \cb3\cf22 != \cb1\cf0 i\cb3\cf22 ; \cb1\cf0 j \cb3\cf22 = \cb1\cf0 L\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ])
\par             \{
\par                 \cb1\cf0 resume\cb3\cf22 (\cb1\cf0 j\cb3\cf22 );
\par             \}
\par         \}
\par         \cb3\cf11\b return false\b0\cb3\cf22 ;
\par     \}
\par \};
\par 
\par \cb1\cf0 DLX gg\cb3\cf22 ;
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par \cb3\cf5 //重复覆盖
\par //K为最大递归深度
\par \cb3\cf4 /* ***********************************************
\par Author        :kuangbin
\par 横纵坐标都从1开始
\par 外部调用dance(0)
\par ansd为ans数组的size
\par ans数组存了答案
\par *************************************************/
\par \cb3\cf13 #define _CRT_SECURE_NO_WARNINGS
\par #include <stdio.h>
\par #include<functional>
\par #include <string.h>
\par #include <iostream>
\par #include <algorithm>
\par #include <vector>
\par #include <queue>
\par #include <set>
\par #include <map>
\par #include <string>
\par #include <math.h>
\par #include <stdlib.h>
\par #include <time.h>
\par \cb3\cf11\b using namespace \b0\cb3\cf13\b std\b0\cb3\cf22 ;
\par \cb3\cf11\b const int \b0\cb1\cf0 inf \cb3\cf22 = \cb3\cf9 0x3f3f3f3f\cb3\cf22 ;
\par \cb3\cf11\b const int \b0\cb1\cf0 maxnode \cb3\cf22 = \cb3\cf9 100010\cb3\cf22 ;
\par \cb3\cf11\b const int \b0\cb1\cf0 maxn \cb3\cf22 = \cb3\cf9 1010\cb3\cf22 ;
\par \cb3\cf11\b const int \b0\cb1\cf0 MaxN \cb3\cf22 = \cb3\cf9 1010\cb3\cf22 ;
\par 
\par \cb3\cf11\b struct \b0\cb1\cf0 DLX
\par \cb3\cf22 \{
\par     \cb3\cf11\b int \b0\cb1\cf0 n\cb3\cf22 , \cb1\cf0 m\cb3\cf22 , \cb3\cf13\b size\b0\cb3\cf22 ;
\par     \cb3\cf11\b int \b0\cb1\cf0 U\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ], \cb1\cf0 D\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ], \cb1\cf0 R\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ], \cb1\cf0 L\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ];
\par     \cb3\cf11\b int \b0\cb1\cf0 Row\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ], \cb1\cf0 Col\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ];
\par     \cb3\cf11\b int \b0\cb1\cf0 H\cb3\cf22 [\cb1\cf0 MaxN\cb3\cf22 ], \cb1\cf0 S\cb3\cf22 [\cb1\cf0 MaxN\cb3\cf22 ];
\par     \cb3\cf11\b int \b0\cb1\cf0 ansd\cb3\cf22 ;
\par     \cb3\cf11\b int \b0\cb1\cf0 K\cb3\cf22 ;
\par     \cb3\cf11\b void \b0\cb1\cf0 init\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 _n\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 _m\cb3\cf22 )
\par     \{
\par         \cb1\cf0 n \cb3\cf22 = \cb1\cf0 _n\cb3\cf22 ;
\par         \cb1\cf0 ansd \cb3\cf22 = \cb1\cf0 inf\cb3\cf22 ;
\par         \cb1\cf0 m \cb3\cf22 = \cb1\cf0 _m\cb3\cf22 ;
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 <= \cb1\cf0 m\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par         \{
\par             \cb1\cf0 U\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = \cb1\cf0 i\cb3\cf22 ;
\par             \cb1\cf0 L\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = \cb1\cf0 i \cb3\cf22 - \cb3\cf9 1\cb3\cf22 ;
\par             \cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = \cb1\cf0 i \cb3\cf22 + \cb3\cf9 1\cb3\cf22 ;
\par             \cb1\cf0 S\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = \cb3\cf9 0\cb3\cf22 ;
\par         \}
\par         \cb1\cf0 R\cb3\cf22 [\cb1\cf0 m\cb3\cf22 ] = \cb3\cf9 0\cb3\cf22 ;
\par         \cb1\cf0 L\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ] = \cb1\cf0 m\cb3\cf22 ;
\par         \cb3\cf13\b size \b0\cb3\cf22 = \cb1\cf0 m\cb3\cf22 ;
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 1\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 <= \cb1\cf0 n\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par         \{
\par             \cb1\cf0 H\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = -\cb3\cf9 1\cb3\cf22 ;
\par         \}
\par 
\par     \}
\par     \cb3\cf11\b void \b0\cb1\cf0 Link\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 r\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 c\cb3\cf22 )
\par     \{
\par         \cb1\cf0 S\cb3\cf22 [\cb1\cf0 Col\cb3\cf22 [++\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 c\cb3\cf22 ]++;
\par         \cb1\cf0 Row\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 r\cb3\cf22 ;
\par         \cb1\cf0 U\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 U\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ];
\par         \cb1\cf0 D\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 c\cb3\cf22 ;
\par         \cb1\cf0 D\cb3\cf22 [\cb1\cf0 U\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ]] = \cb3\cf13\b size\b0\cb3\cf22 ;
\par         \cb1\cf0 U\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ] = \cb3\cf13\b size\b0\cb3\cf22 ;
\par         \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 H\cb3\cf22 [\cb1\cf0 r\cb3\cf22 ] == -\cb3\cf9 1\cb3\cf22 )
\par         \{
\par             \cb1\cf0 H\cb3\cf22 [\cb1\cf0 r\cb3\cf22 ] = \cb1\cf0 R\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 L\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb3\cf13\b size\b0\cb3\cf22 ;
\par         \}
\par         \cb3\cf11\b else
\par         \b0\cb3\cf22 \{
\par             \cb1\cf0 R\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 H\cb3\cf22 [\cb1\cf0 r\cb3\cf22 ];
\par             \cb1\cf0 L\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 L\cb3\cf22 [\cb1\cf0 H\cb3\cf22 [\cb1\cf0 r\cb3\cf22 ]];
\par             \cb1\cf0 R\cb3\cf22 [\cb1\cf0 L\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ]] = \cb3\cf13\b size\b0\cb3\cf22 ;
\par             \cb1\cf0 L\cb3\cf22 [\cb1\cf0 H\cb3\cf22 [\cb1\cf0 r\cb3\cf22 ]] = \cb3\cf13\b size\b0\cb3\cf22 ;
\par         \}
\par     \}
\par     \cb3\cf11\b void \b0\cb3\cf13\b remove\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 c\cb3\cf22 )
\par     \{
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ]; \cb1\cf0 i \cb3\cf22 != \cb1\cf0 c\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ])
\par         \{
\par             \cb1\cf0 L\cb3\cf22 [\cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]] = \cb1\cf0 L\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ];
\par             \cb1\cf0 R\cb3\cf22 [\cb1\cf0 L\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]] = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ];
\par         \}
\par     \}
\par     \cb3\cf11\b void \b0\cb1\cf0 resume\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 c\cb3\cf22 )
\par     \{
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb1\cf0 U\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ]; \cb1\cf0 i \cb3\cf22 != \cb1\cf0 c\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 = \cb1\cf0 U\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ])
\par         \{
\par             \cb1\cf0 R\cb3\cf22 [\cb1\cf0 L\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]] = \cb1\cf0 L\cb3\cf22 [\cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]] = \cb1\cf0 i\cb3\cf22 ;
\par         \}
\par     \}
\par     \cb3\cf11\b bool \b0\cb1\cf0 v\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ];
\par     \cb3\cf11\b int \b0\cb1\cf0 h\cb3\cf22 ()
\par     \{
\par         \cb3\cf11\b int \b0\cb1\cf0 ret \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ;
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 c \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ]; \cb1\cf0 c \cb3\cf22 != \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 c \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ]) \cb1\cf0 v\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ] = \cb3\cf11\b true\b0\cb3\cf22 ;
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 c \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ]; \cb1\cf0 c \cb3\cf22 != \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 c \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ])
\par         \{
\par             \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 v\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ])
\par             \{
\par                 \cb1\cf0 ret\cb3\cf22 ++;
\par                 \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ]; \cb1\cf0 i \cb3\cf22 != \cb1\cf0 c\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ])
\par                 \{
\par                     \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 j \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]; \cb1\cf0 j \cb3\cf22 != \cb1\cf0 i\cb3\cf22 ; \cb1\cf0 j \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ])
\par                     \{
\par                         \cb1\cf0 v\cb3\cf22 [\cb1\cf0 Col\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ]] = \cb3\cf11\b false\b0\cb3\cf22 ;
\par                     \}
\par                 \}
\par             \}
\par         \}
\par         \cb3\cf11\b return \b0\cb1\cf0 ret\cb3\cf22 ;
\par     \}
\par     \cb3\cf11\b bool \b0\cb1\cf0 dance\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 d\cb3\cf22 )
\par     \{
\par         \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 d \cb3\cf22 + \cb1\cf0 h\cb3\cf22 () > \cb1\cf0 ansd\cb3\cf22 )
\par         \{
\par             \cb3\cf11\b return false\b0\cb3\cf22 ;
\par         \}
\par         \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 R\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ] == \cb3\cf9 0\cb3\cf22 )
\par         \{
\par             \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 ansd \cb3\cf22 > \cb1\cf0 d\cb3\cf22 ) \cb1\cf0 ansd \cb3\cf22 = \cb1\cf0 d\cb3\cf22 ;
\par             \cb3\cf11\b return true\b0\cb3\cf22 ;
\par         \}
\par         \cb3\cf11\b bool \b0\cb1\cf0 ret \cb3\cf22 = \cb3\cf11\b false\b0\cb3\cf22 ;
\par         \cb3\cf11\b int \b0\cb1\cf0 c \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ];
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ]; \cb1\cf0 i \cb3\cf22 != \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ])
\par         \{
\par             \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 S\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] < \cb1\cf0 S\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ])
\par             \{
\par                 \cb1\cf0 c \cb3\cf22 = \cb1\cf0 i\cb3\cf22 ;
\par             \}
\par         \}
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ]; \cb1\cf0 i \cb3\cf22 != \cb1\cf0 c\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ])
\par         \{
\par             \cb3\cf13\b remove\b0\cb3\cf22 (\cb1\cf0 i\cb3\cf22 );
\par             \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 j \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]; \cb1\cf0 j \cb3\cf22 != \cb1\cf0 i\cb3\cf22 ; \cb1\cf0 j \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ])
\par             \{
\par                 \cb3\cf13\b remove\b0\cb3\cf22 (\cb1\cf0 j\cb3\cf22 );
\par             \}
\par             \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 dance\cb3\cf22 (\cb1\cf0 d \cb3\cf22 + \cb3\cf9 1\cb3\cf22 )) \cb1\cf0 ret \cb3\cf22 = \cb3\cf11\b true\b0\cb3\cf22 ;
\par             \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 j \cb3\cf22 = \cb1\cf0 L\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]; \cb1\cf0 j \cb3\cf22 != \cb1\cf0 i\cb3\cf22 ; \cb1\cf0 j \cb3\cf22 = \cb1\cf0 L\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ])
\par             \{
\par                 \cb1\cf0 resume\cb3\cf22 (\cb1\cf0 j\cb3\cf22 );
\par             \}
\par             \cb1\cf0 resume\cb3\cf22 (\cb1\cf0 i\cb3\cf22 );
\par         \}
\par         \cb3\cf11\b return \b0\cb1\cf0 ret\cb3\cf22 ;
\par     \}
\par     \cb3\cf11\b void \b0\cb1\cf0 Dance\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 d\cb3\cf22 )
\par     \{
\par         \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 d \cb3\cf22 + \cb1\cf0 h\cb3\cf22 () >= \cb1\cf0 ansd\cb3\cf22 )\cb3\cf11\b return\b0\cb3\cf22 ;
\par         \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 R\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ] == \cb3\cf9 0\cb3\cf22 )
\par         \{
\par             \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 d \cb3\cf22 < \cb1\cf0 ansd\cb3\cf22 )\cb1\cf0 ansd \cb3\cf22 = \cb1\cf0 d\cb3\cf22 ;
\par             \cb3\cf11\b return\b0\cb3\cf22 ;
\par         \}
\par         \cb3\cf11\b int \b0\cb1\cf0 c \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ];
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ]; \cb1\cf0 i \cb3\cf22 != \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ])
\par             \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 S\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] < \cb1\cf0 S\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ])
\par                 \cb1\cf0 c \cb3\cf22 = \cb1\cf0 i\cb3\cf22 ;
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ]; \cb1\cf0 i \cb3\cf22 != \cb1\cf0 c\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ])
\par         \{
\par             \cb3\cf13\b remove\b0\cb3\cf22 (\cb1\cf0 i\cb3\cf22 );
\par             \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 j \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]; \cb1\cf0 j \cb3\cf22 != \cb1\cf0 i\cb3\cf22 ; \cb1\cf0 j \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ])\cb3\cf13\b remove\b0\cb3\cf22 (\cb1\cf0 j\cb3\cf22 );
\par             \cb1\cf0 Dance\cb3\cf22 (\cb1\cf0 d \cb3\cf22 + \cb3\cf9 1\cb3\cf22 );
\par             \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 j \cb3\cf22 = \cb1\cf0 L\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]; \cb1\cf0 j \cb3\cf22 != \cb1\cf0 i\cb3\cf22 ; \cb1\cf0 j \cb3\cf22 = \cb1\cf0 L\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ])\cb1\cf0 resume\cb3\cf22 (\cb1\cf0 j\cb3\cf22 );
\par             \cb1\cf0 resume\cb3\cf22 (\cb1\cf0 i\cb3\cf22 );
\par         \}
\par     \}
\par \};
\par 
\par \cb1\cf0 DLX gg\cb3\cf22 ;
\par 
\par \cb1\cf0 dijkstra最短路
\par 
\par \cb3\cf13 #include<iostream>
\par #include<vector>
\par #include<cstring>
\par #include<functional>
\par #include<algorithm>
\par #include<string>
\par #include<queue>
\par \cb3\cf11\b using namespace \b0\cb3\cf13\b std\b0\cb3\cf22 ;
\par \cb3\cf11\b typedef \b0\cb3\cf13\b pair\b0\cb3\cf22 <\cb3\cf11\b int\b0\cb3\cf22 , \cb3\cf11\b int\b0\cb3\cf22 > \cb1\cf0 pii\cb3\cf22 ;
\par \cb3\cf11\b const int \b0\cb1\cf0 maxn \cb3\cf22 = \cb3\cf9 10005\cb3\cf22 ;
\par \cb3\cf11\b int \b0\cb1\cf0 dis\cb3\cf22 [\cb1\cf0 maxn\cb3\cf22 ];
\par \cb3\cf13\b vector\b0\cb3\cf22 <\cb3\cf11\b int\b0\cb3\cf22 > \cb1\cf0 G\cb3\cf22 [\cb1\cf0 maxn\cb3\cf22 ];
\par \cb3\cf11\b const int \b0\cb1\cf0 inf \cb3\cf22 = \cb3\cf9 0x3f3f3f3f\cb3\cf22 ;
\par \cb3\cf11\b int \b0\cb1\cf0 ecnt\cb3\cf22 ;
\par \cb3\cf11\b struct \b0\cb1\cf0 edge
\par \cb3\cf22 \{
\par     \cb3\cf11\b int \b0\cb1\cf0 from\cb3\cf22 , \cb1\cf0 to\cb3\cf22 , \cb1\cf0 cost\cb3\cf22 ;
\par \};
\par \cb1\cf0 edge es\cb3\cf22 [\cb1\cf0 maxn \cb3\cf22 * \cb1\cf0 maxn\cb3\cf22 ];
\par 
\par \cb3\cf11\b void \b0\cb1\cf0 dijkstra\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 s\cb3\cf22 )
\par \{
\par     \cb3\cf13\b priority_queue\b0\cb3\cf22 <\cb1\cf0 pii\cb3\cf22 , \cb3\cf13\b vector\b0\cb3\cf22 <\cb1\cf0 pii\cb3\cf22 >, \cb3\cf13\b greater\b0\cb3\cf22 <\cb1\cf0 pii\cb3\cf22 > > \cb1\cf0 q\cb3\cf22 ;
\par     \cb1\cf0 q\cb3\cf22 .\cb1\cf0 push\cb3\cf22 (\{\cb3\cf9 0\cb3\cf22 , \cb1\cf0 s\cb3\cf22 \});
\par     \cb1\cf0 dis\cb3\cf22 [\cb1\cf0 s\cb3\cf22 ] = \cb3\cf9 0\cb3\cf22 ;
\par     \cb3\cf11\b while \b0\cb3\cf22 (!\cb1\cf0 q\cb3\cf22 .\cb3\cf13\b empty\b0\cb3\cf22 ())
\par     \{
\par         \cb1\cf0 pii c \cb3\cf22 = \cb1\cf0 q\cb3\cf22 .\cb1\cf0 top\cb3\cf22 ();
\par         \cb1\cf0 q\cb3\cf22 .\cb1\cf0 pop\cb3\cf22 ();
\par         \cb3\cf11\b int \b0\cb1\cf0 cur \cb3\cf22 = \cb1\cf0 c\cb3\cf22 .\cb1\cf0 second\cb3\cf22 ;
\par 
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 < \cb1\cf0 G\cb3\cf22 [\cb1\cf0 cur\cb3\cf22 ].\cb3\cf13\b size\b0\cb3\cf22 (); \cb1\cf0 i\cb3\cf22 ++)
\par         \{
\par             \cb1\cf0 edge \cb3\cf22 & \cb1\cf0 e \cb3\cf22 = \cb1\cf0 es\cb3\cf22 [\cb1\cf0 G\cb3\cf22 [\cb1\cf0 cur\cb3\cf22 ][\cb1\cf0 i\cb3\cf22 ]];
\par             \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 dis\cb3\cf22 [\cb1\cf0 e\cb3\cf22 .\cb1\cf0 to\cb3\cf22 ] > \cb1\cf0 dis\cb3\cf22 [\cb1\cf0 e\cb3\cf22 .\cb1\cf0 from\cb3\cf22 ] + \cb1\cf0 e\cb3\cf22 .\cb1\cf0 cost\cb3\cf22 )
\par             \{
\par                 \cb1\cf0 dis\cb3\cf22 [\cb1\cf0 e\cb3\cf22 .\cb1\cf0 to\cb3\cf22 ] = \cb1\cf0 dis\cb3\cf22 [\cb1\cf0 e\cb3\cf22 .\cb1\cf0 from\cb3\cf22 ] + \cb1\cf0 e\cb3\cf22 .\cb1\cf0 cost\cb3\cf22 ;
\par                 \cb1\cf0 q\cb3\cf22 .\cb1\cf0 push\cb3\cf22 (\{\cb1\cf0 dis\cb3\cf22 [\cb1\cf0 e\cb3\cf22 .\cb1\cf0 to\cb3\cf22 ],\cb1\cf0 e\cb3\cf22 .\cb1\cf0 to\cb3\cf22 \});
\par             \}
\par         \}
\par 
\par     \}
\par \}
\par \cb3\cf11\b void \b0\cb1\cf0 init\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 n\cb3\cf22 )
\par \{
\par     \cb1\cf0 ecnt \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ;
\par     \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 < \cb1\cf0 n\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par     \{
\par         \cb1\cf0 G\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ].\cb3\cf13\b clear\b0\cb3\cf22 ();
\par     \}
\par     \cb1\cf0 memset\cb3\cf22 (\cb1\cf0 dis\cb3\cf22 , \cb1\cf0 inf\cb3\cf22 , \cb3\cf11\b sizeof\b0\cb3\cf22 (\cb1\cf0 dis\cb3\cf22 ));
\par \}
\par \cb3\cf11\b void \b0\cb1\cf0 addedge\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 u\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 v\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 w\cb3\cf22 )
\par \{
\par     \cb1\cf0 es\cb3\cf22 [\cb1\cf0 ecnt\cb3\cf22 ] = \{\cb1\cf0 u\cb3\cf22 , \cb1\cf0 v\cb3\cf22 , \cb1\cf0 w\cb3\cf22 \};
\par     \cb1\cf0 G\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ].\cb3\cf13\b push_back\b0\cb3\cf22 (\cb1\cf0 ecnt\cb3\cf22 ++);
\par \}
\par 
\par \cb1\cf0 并查集
\par \cb3\cf13 #include<cstdio>
\par \cb3\cf11\b const int \b0\cb1\cf0 maxn \cb3\cf22 = \cb3\cf9 100000 \cb3\cf22 + \cb3\cf9 10\cb3\cf22 ;
\par \cb3\cf11\b int \b0\cb1\cf0 pa\cb3\cf22 [\cb1\cf0 maxn\cb3\cf22 ];
\par \cb3\cf11\b int \b0\cb3\cf13\b rank\b0\cb3\cf22 [\cb1\cf0 maxn\cb3\cf22 ];
\par \cb3\cf11\b int \b0\cb1\cf0 findset\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 x\cb3\cf22 )
\par \{
\par     \cb3\cf11\b return \b0\cb1\cf0 pa\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ]!=\cb1\cf0 x \cb3\cf22 ? \cb1\cf0 pa\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ] = \cb1\cf0 findset\cb3\cf22 (\cb1\cf0 pa\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ]) : \cb1\cf0 x\cb3\cf22 ;
\par \}
\par \cb3\cf11\b void \b0\cb1\cf0 uni\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 a\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 b\cb3\cf22 )
\par \{
\par     \cb3\cf11\b if\b0\cb3\cf22 ((\cb1\cf0 a \cb3\cf22 = \cb1\cf0 findset\cb3\cf22 (\cb1\cf0 a\cb3\cf22 )) == (\cb1\cf0 b \cb3\cf22 = \cb1\cf0 findset\cb3\cf22 (\cb1\cf0 b\cb3\cf22 )))
\par     \{
\par         \cb3\cf11\b return\b0\cb3\cf22 ;
\par     \}
\par     \cb3\cf11\b if\b0\cb3\cf22 (\cb3\cf13\b rank\b0\cb3\cf22 [\cb1\cf0 a\cb3\cf22 ] > \cb3\cf13\b rank\b0\cb3\cf22 [\cb1\cf0 b\cb3\cf22 ])
\par     \{
\par         \cb1\cf0 pa\cb3\cf22 [\cb1\cf0 b\cb3\cf22 ] = \cb1\cf0 a\cb3\cf22 ;
\par     \}
\par     \cb3\cf11\b else
\par     \b0\cb3\cf22 \{
\par         \cb3\cf11\b if\b0\cb3\cf22 (\cb3\cf13\b rank\b0\cb3\cf22 [\cb1\cf0 a\cb3\cf22 ] == \cb3\cf13\b rank\b0\cb3\cf22 [\cb1\cf0 b\cb3\cf22 ])
\par             \cb3\cf13\b rank\b0\cb3\cf22 [\cb1\cf0 b\cb3\cf22 ] ++;
\par         \cb1\cf0 pa\cb3\cf22 [\cb1\cf0 a\cb3\cf22 ] = \cb1\cf0 b\cb3\cf22 ;
\par     \}
\par \}
\par \cb3\cf11\b void \b0\cb1\cf0 initps\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 n\cb3\cf22 )
\par \{
\par     \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 <= \cb1\cf0 n\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par     \{
\par         \cb1\cf0 pa\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = \cb1\cf0 i\cb3\cf22 ;
\par         \cb3\cf13\b rank\b0\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = \cb3\cf9 0\cb3\cf22 ;
\par     \}
\par \}
\par \cb1\cf0 欧拉phi函数：小于n且与n互素的整数个数
\par 
\par \cb3\cf11\b int \b0\cb1\cf0 euler_phi\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 n\cb3\cf22 )
\par \{
\par     \cb3\cf11\b int \b0\cb1\cf0 m \cb3\cf22 = (\cb3\cf11\b int\b0\cb3\cf22 ) \cb1\cf0 sqrt\cb3\cf22 (\cb1\cf0 n \cb3\cf22 +\cb3\cf9 0.5\cb3\cf22 );
\par     \cb3\cf11\b int \b0\cb1\cf0 ans \cb3\cf22 = \cb1\cf0 n\cb3\cf22 ;
\par     \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 2\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 <= \cb1\cf0 m\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par     \{
\par         \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 n \cb3\cf22 % \cb1\cf0 i \cb3\cf22 == \cb3\cf9 0\cb3\cf22 )
\par         \{
\par             \cb1\cf0 ans \cb3\cf22 = \cb1\cf0 ans \cb3\cf22 / \cb1\cf0 i \cb3\cf22 * (\cb1\cf0 i \cb3\cf22 - \cb3\cf9 1\cb3\cf22 );
\par             \cb3\cf11\b while\b0\cb3\cf22 (\cb1\cf0 n \cb3\cf22 % \cb1\cf0 i \cb3\cf22 == \cb3\cf9 0\cb3\cf22 )
\par             \{
\par                 \cb1\cf0 n \cb3\cf22 /= \cb1\cf0 i\cb3\cf22 ;
\par             \}
\par         \}
\par     \}
\par     \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 n \cb3\cf22 > \cb3\cf9 1\cb3\cf22 )
\par     \{
\par         \cb1\cf0 ans \cb3\cf22 = \cb1\cf0 ans \cb3\cf22 / \cb1\cf0 n \cb3\cf22 * (\cb1\cf0 n \cb3\cf22 - \cb3\cf9 1\cb3\cf22 );
\par     \}
\par \}
\par \cb3\cf11\b int \b0\cb1\cf0 phi\cb3\cf22 [\cb1\cf0 maxn\cb3\cf22 ];
\par \cb3\cf11\b void \b0\cb1\cf0 phi_table\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 n\cb3\cf22 )
\par \{
\par     \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 2\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 <= \cb1\cf0 n\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par     \{
\par         \cb1\cf0 phi\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = \cb3\cf9 0\cb3\cf22 ;
\par     \}
\par     \cb1\cf0 phi\cb3\cf22 [\cb3\cf9 1\cb3\cf22 ] = \cb3\cf9 1\cb3\cf22 ;
\par     \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 2\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 <= \cb1\cf0 n\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par     \{
\par         \cb3\cf11\b if\b0\cb3\cf22 (!\cb1\cf0 phi\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ])
\par         \{
\par             \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 j \cb3\cf22 = \cb1\cf0 i\cb3\cf22 ; \cb1\cf0 j \cb3\cf22 <= \cb1\cf0 n\cb3\cf22 ; \cb1\cf0 j\cb3\cf22 += \cb1\cf0 i\cb3\cf22 )
\par             \{
\par                 \cb3\cf11\b if\b0\cb3\cf22 (!\cb1\cf0 phi\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ])
\par                 \{
\par                     \cb1\cf0 phi\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ] = \cb1\cf0 j\cb3\cf22 ;
\par                 \}
\par                 \cb1\cf0 phi\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ] = \cb1\cf0 phi\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ] / \cb1\cf0 i \cb3\cf22 * (\cb1\cf0 i \cb3\cf22 - \cb3\cf9 1\cb3\cf22 );
\par             \}
\par         \}
\par     \}
\par \}
\par 
\par 
\par \cb1\cf0 iscut寻找割
\par 
\par \cb3\cf11\b int \b0\cb1\cf0 dfs_clock\cb3\cf22 ;
\par \cb3\cf11\b int \b0\cb1\cf0 dfs\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 u\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 fa\cb3\cf22 )
\par \{
\par     \cb3\cf11\b int \b0\cb1\cf0 lowu \cb3\cf22 = \cb1\cf0 pre\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ] = ++\cb1\cf0 dfs_clock\cb3\cf22 ;\cb3\cf5 //
\par     \cb3\cf11\b int \b0\cb1\cf0 child \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ;
\par     \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 < \cb1\cf0 G\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ].\cb3\cf13\b size\b0\cb3\cf22 (); \cb1\cf0 i\cb3\cf22 ++)
\par     \{
\par         \cb3\cf11\b int \b0\cb1\cf0 v \cb3\cf22 = \cb1\cf0 G\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ][\cb1\cf0 i\cb3\cf22 ];
\par         \cb3\cf11\b if\b0\cb3\cf22 (!\cb1\cf0 pre\cb3\cf22 [\cb1\cf0 v\cb3\cf22 ])\cb3\cf5 //have not been visited
\par         \cb3\cf22 \{
\par             \cb1\cf0 child\cb3\cf22 ++;
\par             \cb3\cf11\b int \b0\cb1\cf0 lowv \cb3\cf22 = \cb1\cf0 dfs\cb3\cf22 (\cb1\cf0 v\cb3\cf22 , \cb1\cf0 u\cb3\cf22 );
\par             \cb1\cf0 lowu \cb3\cf22 = \cb3\cf13\b min\b0\cb3\cf22 (\cb1\cf0 lowu\cb3\cf22 , \cb1\cf0 lowv\cb3\cf22 );
\par             \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 lowv \cb3\cf22 >= \cb1\cf0 pre\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ])
\par             \{
\par                 \cb1\cf0 iscut\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ] = \cb3\cf11\b true\b0\cb3\cf22 ;
\par             \}
\par         \}
\par         \cb3\cf11\b else if\b0\cb3\cf22 (\cb1\cf0 pre\cb3\cf22 [\cb1\cf0 v\cb3\cf22 ] < \cb1\cf0 pre\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ] && \cb1\cf0 v \cb3\cf22 != \cb1\cf0 fa\cb3\cf22 )
\par         \{
\par             \cb1\cf0 lowu \cb3\cf22 = \cb3\cf13\b min\b0\cb3\cf22 (\cb1\cf0 lowu\cb3\cf22 , \cb1\cf0 pre\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ]);
\par         \}
\par     \}
\par     \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 fa \cb3\cf22 < \cb3\cf9 0 \cb3\cf22 && \cb1\cf0 child \cb3\cf22 == \cb3\cf9 1\cb3\cf22 )
\par     \{
\par         \cb1\cf0 iscut\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ] = \cb3\cf9 0\cb3\cf22 ;
\par     \}
\par     \cb1\cf0 low\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ] = \cb1\cf0 lowu\cb3\cf22 ;
\par     \cb3\cf11\b return \b0\cb1\cf0 lowu\cb3\cf22 ;
\par \}
\par 
\par 
\par \cb3\cf4 /*
\par * Kruskal算法求MST
\par */
\par \cb3\cf13 #include<iostream>
\par #include<cstring>
\par #include<algorithm>
\par \cb3\cf11\b using namespace \b0\cb3\cf13\b std\b0\cb3\cf22 ;
\par \cb3\cf11\b const int \b0\cb1\cf0 MAXN \cb3\cf22 = \cb3\cf9 110\cb3\cf22 ;\cb3\cf5 //最大点数
\par \cb3\cf11\b const int \b0\cb1\cf0 MAXM \cb3\cf22 = \cb3\cf9 10000\cb3\cf22 ;\cb3\cf5 //最大边数
\par \cb3\cf11\b int \b0\cb1\cf0 F\cb3\cf22 [\cb1\cf0 MAXN\cb3\cf22 ];\cb3\cf5 //并查集使用
\par \cb3\cf11\b struct \b0\cb1\cf0 Edge
\par \cb3\cf22 \{
\par     \cb3\cf11\b int \b0\cb1\cf0 u\cb3\cf22 , \cb1\cf0 v\cb3\cf22 , \cb1\cf0 w\cb3\cf22 ;
\par \}\cb1\cf0 edge\cb3\cf22 [\cb1\cf0 MAXM\cb3\cf22 ];\cb3\cf5 //存储边的信息，包括起点/终点/权值
\par \cb3\cf11\b int \b0\cb1\cf0 tol\cb3\cf22 ;\cb3\cf5 //边数，加边前赋值为0
\par \cb3\cf11\b void \b0\cb1\cf0 addedge\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 u\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 v\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 w\cb3\cf22 )
\par \{
\par 
\par     \cb1\cf0 edge\cb3\cf22 [\cb1\cf0 tol\cb3\cf22 ].\cb1\cf0 u \cb3\cf22 = \cb1\cf0 u\cb3\cf22 ;
\par     \cb1\cf0 edge\cb3\cf22 [\cb1\cf0 tol\cb3\cf22 ].\cb1\cf0 v \cb3\cf22 = \cb1\cf0 v\cb3\cf22 ;
\par     \cb1\cf0 edge\cb3\cf22 [\cb1\cf0 tol\cb3\cf22 ++].\cb1\cf0 w \cb3\cf22 = \cb1\cf0 w\cb3\cf22 ;
\par \}
\par \cb3\cf11\b bool \b0\cb1\cf0 cmp\cb3\cf22 (\cb1\cf0 Edge a\cb3\cf22 , \cb1\cf0 Edge b\cb3\cf22 )
\par \{\cb3\cf5 //排序函数，讲边按照权值从小到大排序
\par     \cb3\cf11\b return \b0\cb1\cf0 a\cb3\cf22 .\cb1\cf0 w\cb3\cf22 <\cb1\cf0 b\cb3\cf22 .\cb1\cf0 w\cb3\cf22 ;
\par \}
\par \cb3\cf11\b int \b0\cb3\cf13\b find\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 x\cb3\cf22 )
\par \{
\par     \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 F\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ] == -\cb3\cf9 1\cb3\cf22 )\cb3\cf11\b return \b0\cb1\cf0 x\cb3\cf22 ;
\par     \cb3\cf11\b else return \b0\cb1\cf0 F\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ] = \cb3\cf13\b find\b0\cb3\cf22 (\cb1\cf0 F\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ]);
\par \}
\par \cb3\cf11\b int \b0\cb1\cf0 Kruskal\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 n\cb3\cf22 )\cb3\cf5 //传入点数，返回最小生成树的权值，如果不连通返回-1
\par \cb3\cf22 \{
\par     \cb1\cf0 memset\cb3\cf22 (\cb1\cf0 F\cb3\cf22 , -\cb3\cf9 1\cb3\cf22 , \cb3\cf11\b sizeof\b0\cb3\cf22 (\cb1\cf0 F\cb3\cf22 ));
\par     \cb3\cf13\b sort\b0\cb3\cf22 (\cb1\cf0 edge\cb3\cf22 , \cb1\cf0 edge \cb3\cf22 + \cb1\cf0 tol\cb3\cf22 , \cb1\cf0 cmp\cb3\cf22 );
\par     \cb3\cf11\b int \b0\cb1\cf0 cnt \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ;\cb3\cf5 //计算加入的边数
\par     \cb3\cf11\b int \b0\cb1\cf0 ans \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ;
\par     \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 <\cb1\cf0 tol\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par     \{
\par         \cb3\cf11\b int \b0\cb1\cf0 u \cb3\cf22 = \cb1\cf0 edge\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ].\cb1\cf0 u\cb3\cf22 ;
\par         \cb3\cf11\b int \b0\cb1\cf0 v \cb3\cf22 = \cb1\cf0 edge\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ].\cb1\cf0 v\cb3\cf22 ;
\par         \cb3\cf11\b int \b0\cb1\cf0 w \cb3\cf22 = \cb1\cf0 edge\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ].\cb1\cf0 w\cb3\cf22 ;
\par         \cb3\cf11\b int \b0\cb1\cf0 t1 \cb3\cf22 = \cb3\cf13\b find\b0\cb3\cf22 (\cb1\cf0 u\cb3\cf22 );
\par         \cb3\cf11\b int \b0\cb1\cf0 t2 \cb3\cf22 = \cb3\cf13\b find\b0\cb3\cf22 (\cb1\cf0 v\cb3\cf22 );
\par         \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 t1 \cb3\cf22 != \cb1\cf0 t2\cb3\cf22 )
\par         \{
\par             \cb1\cf0 ans \cb3\cf22 += \cb1\cf0 w\cb3\cf22 ;
\par             \cb1\cf0 F\cb3\cf22 [\cb1\cf0 t1\cb3\cf22 ] = \cb1\cf0 t2\cb3\cf22 ;
\par             \cb1\cf0 cnt\cb3\cf22 ++;
\par         \}
\par         \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 cnt \cb3\cf22 == \cb1\cf0 n \cb3\cf22 - \cb3\cf9 1\cb3\cf22 )\cb3\cf11\b break\b0\cb3\cf22 ;
\par     \}
\par     \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 cnt\cb3\cf22 <\cb1\cf0 n \cb3\cf22 - \cb3\cf9 1\cb3\cf22 )\cb3\cf11\b return \b0\cb3\cf22 -\cb3\cf9 1\cb3\cf22 ;\cb3\cf5 //不连通
\par     \cb3\cf11\b else return \b0\cb1\cf0 ans\cb3\cf22 ;
\par \}
\par 
\par 
\par \cb3\cf13 #include<cstring>
\par #include<iostream>
\par \cb3\cf11\b using namespace \b0\cb3\cf13\b std\b0\cb3\cf22 ;
\par 
\par 
\par \cb3\cf4 /*
\par * Prim求MST
\par * 耗费矩阵cost[][]，标号从0开始，0~n-1
\par * 返回最小生成树的权值，返回-1表示原图不连通
\par */
\par \cb3\cf11\b const int \b0\cb1\cf0 INF \cb3\cf22 = \cb3\cf9 0x3f3f3f3f\cb3\cf22 ;
\par \cb3\cf11\b const int \b0\cb1\cf0 MAXN \cb3\cf22 = \cb3\cf9 110\cb3\cf22 ;
\par \cb3\cf11\b bool \b0\cb1\cf0 vis\cb3\cf22 [\cb1\cf0 MAXN\cb3\cf22 ];
\par \cb3\cf11\b int \b0\cb1\cf0 lowc\cb3\cf22 [\cb1\cf0 MAXN\cb3\cf22 ];
\par \cb3\cf11\b int \b0\cb1\cf0 cost\cb3\cf22 [\cb1\cf0 MAXN\cb3\cf22 ][\cb1\cf0 MAXN\cb3\cf22 ];
\par \cb3\cf11\b int \b0\cb1\cf0 Prim\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 n\cb3\cf22 )\cb3\cf5 //点是0~n-1
\par \cb3\cf22 \{
\par     \cb3\cf11\b int \b0\cb1\cf0 ans \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ;
\par     \cb1\cf0 memset\cb3\cf22 (\cb1\cf0 vis\cb3\cf22 , \cb3\cf11\b false\b0\cb3\cf22 , \cb3\cf11\b sizeof\b0\cb3\cf22 (\cb1\cf0 vis\cb3\cf22 ));
\par     \cb1\cf0 vis\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ] = \cb3\cf11\b true\b0\cb3\cf22 ;
\par     \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 1\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 <\cb1\cf0 n\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)\cb1\cf0 lowc\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = \cb1\cf0 cost\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ][\cb1\cf0 i\cb3\cf22 ];
\par     \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 1\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 <\cb1\cf0 n\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par     \{
\par         \cb3\cf11\b int \b0\cb1\cf0 minc \cb3\cf22 = \cb1\cf0 INF\cb3\cf22 ;
\par         \cb3\cf11\b int \b0\cb1\cf0 p \cb3\cf22 = -\cb3\cf9 1\cb3\cf22 ;
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 j \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 j\cb3\cf22 <\cb1\cf0 n\cb3\cf22 ; \cb1\cf0 j\cb3\cf22 ++)
\par             \cb3\cf11\b if \b0\cb3\cf22 (!\cb1\cf0 vis\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ] && \cb1\cf0 minc\cb3\cf22 >\cb1\cf0 lowc\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ])
\par             \{
\par                 \cb1\cf0 minc \cb3\cf22 = \cb1\cf0 lowc\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ];
\par                 \cb1\cf0 p \cb3\cf22 = \cb1\cf0 j\cb3\cf22 ;
\par             \}
\par         \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 minc \cb3\cf22 == \cb1\cf0 INF\cb3\cf22 )\cb3\cf11\b return \b0\cb3\cf22 -\cb3\cf9 1\cb3\cf22 ;\cb3\cf5 //原图不连通
\par         \cb1\cf0 ans \cb3\cf22 += \cb1\cf0 minc\cb3\cf22 ;
\par         \cb1\cf0 vis\cb3\cf22 [\cb1\cf0 p\cb3\cf22 ] = \cb3\cf11\b true\b0\cb3\cf22 ;
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 j \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 j\cb3\cf22 <\cb1\cf0 n\cb3\cf22 ; \cb1\cf0 j\cb3\cf22 ++)
\par             \cb3\cf11\b if \b0\cb3\cf22 (!\cb1\cf0 vis\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ] && \cb1\cf0 lowc\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ]>\cb1\cf0 cost\cb3\cf22 [\cb1\cf0 p\cb3\cf22 ][\cb1\cf0 j\cb3\cf22 ])
\par                 \cb1\cf0 lowc\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ] = \cb1\cf0 cost\cb3\cf22 [\cb1\cf0 p\cb3\cf22 ][\cb1\cf0 j\cb3\cf22 ];
\par     \}
\par     \cb3\cf11\b return \b0\cb1\cf0 ans\cb3\cf22 ;
\par \}
\par 
\par 
\par \cb1\cf0 最大流isap算法
\par 
\par \cb3\cf13 #include<iostream>
\par #include<algorithm>
\par #include<vector>
\par #include<deque>
\par #include<cstring>
\par 
\par \cb3\cf11\b using namespace \b0\cb3\cf13\b std\b0\cb3\cf22 ;
\par \cb3\cf11\b const int \b0\cb1\cf0 inf \cb3\cf22 = \cb3\cf9 0x3f3f3f3f\cb3\cf22 ;
\par \cb3\cf11\b const int \b0\cb1\cf0 maxp \cb3\cf22 = \cb3\cf9 10\cb3\cf22 ;
\par \cb3\cf11\b const int \b0\cb1\cf0 maxn \cb3\cf22 = \cb3\cf9 202 \cb3\cf22 * \cb3\cf9 2\cb3\cf22 ;
\par \cb3\cf11\b int \b0\cb1\cf0 S\cb3\cf22 [\cb1\cf0 maxn\cb3\cf22 ][\cb1\cf0 maxp\cb3\cf22 ];
\par \cb3\cf11\b int \b0\cb1\cf0 Q\cb3\cf22 [\cb1\cf0 maxn\cb3\cf22 ];
\par \cb3\cf11\b int \b0\cb1\cf0 D\cb3\cf22 [\cb1\cf0 maxn\cb3\cf22 ][\cb1\cf0 maxp\cb3\cf22 ];
\par \cb3\cf11\b struct \b0\cb1\cf0 edge
\par \cb3\cf22 \{
\par     \cb3\cf11\b int \b0\cb1\cf0 from\cb3\cf22 , \cb1\cf0 to\cb3\cf22 , \cb1\cf0 flow\cb3\cf22 , \cb1\cf0 cap\cb3\cf22 ;
\par \};
\par \cb3\cf11\b struct \b0\cb1\cf0 isap
\par \cb3\cf22 \{
\par     \cb3\cf11\b int \b0\cb1\cf0 n\cb3\cf22 , \cb1\cf0 m\cb3\cf22 , \cb1\cf0 s\cb3\cf22 , \cb1\cf0 t\cb3\cf22 ;
\par     \cb3\cf13\b vector\b0\cb3\cf22 <\cb3\cf11\b int\b0\cb3\cf22 > \cb1\cf0 G\cb3\cf22 [\cb1\cf0 maxn\cb3\cf22 ];
\par     \cb3\cf13\b vector\b0\cb3\cf22 <\cb1\cf0 edge\cb3\cf22 > \cb1\cf0 es\cb3\cf22 ;
\par     \cb3\cf11\b bool \b0\cb1\cf0 vis\cb3\cf22 [\cb1\cf0 maxn\cb3\cf22 ];
\par     \cb3\cf11\b int \b0\cb1\cf0 num\cb3\cf22 [\cb1\cf0 maxn\cb3\cf22 ];
\par     \cb3\cf11\b int \b0\cb1\cf0 cur\cb3\cf22 [\cb1\cf0 maxn\cb3\cf22 ];
\par     \cb3\cf11\b int \b0\cb1\cf0 dis\cb3\cf22 [\cb1\cf0 maxn\cb3\cf22 ];
\par     \cb3\cf11\b int \b0\cb1\cf0 p\cb3\cf22 [\cb1\cf0 maxn\cb3\cf22 ];
\par     \cb1\cf0 isap\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 n_\cb3\cf22 ) :\cb1\cf0 n\cb3\cf22 (\cb1\cf0 n_\cb3\cf22 )
\par     \{
\par 
\par     \}
\par     \cb3\cf11\b void \b0\cb1\cf0 add_edge\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 u\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 v\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 cap\cb3\cf22 )
\par     \{
\par         \cb1\cf0 es\cb3\cf22 .\cb3\cf13\b push_back\b0\cb3\cf22 (\{ \cb1\cf0 u\cb3\cf22 , \cb1\cf0 v\cb3\cf22 , \cb3\cf9 0\cb3\cf22 , \cb1\cf0 cap \cb3\cf22 \});
\par         \cb1\cf0 es\cb3\cf22 .\cb3\cf13\b push_back\b0\cb3\cf22 (\{ \cb1\cf0 v\cb3\cf22 , \cb1\cf0 u\cb3\cf22 , \cb3\cf9 0\cb3\cf22 , \cb3\cf9 0 \cb3\cf22 \});
\par         \cb1\cf0 m \cb3\cf22 = \cb1\cf0 es\cb3\cf22 .\cb3\cf13\b size\b0\cb3\cf22 ();
\par         \cb1\cf0 G\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ].\cb3\cf13\b push_back\b0\cb3\cf22 (\cb1\cf0 m \cb3\cf22 - \cb3\cf9 2\cb3\cf22 );
\par         \cb1\cf0 G\cb3\cf22 [\cb1\cf0 v\cb3\cf22 ].\cb3\cf13\b push_back\b0\cb3\cf22 (\cb1\cf0 m \cb3\cf22 - \cb3\cf9 1\cb3\cf22 );
\par 
\par     \}
\par     \cb3\cf11\b void \b0\cb1\cf0 bfs\cb3\cf22 ()
\par     \{
\par         \cb3\cf13\b deque\b0\cb3\cf22 <\cb3\cf11\b int\b0\cb3\cf22 > \cb1\cf0 q\cb3\cf22 ;
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 < \cb1\cf0 n\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par         \{
\par             \cb1\cf0 dis\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = \cb1\cf0 n\cb3\cf22 ;
\par         \}
\par         \cb1\cf0 memset\cb3\cf22 (\cb1\cf0 vis\cb3\cf22 , \cb3\cf9 0\cb3\cf22 , \cb3\cf11\b sizeof\b0\cb3\cf22 (\cb1\cf0 vis\cb3\cf22 ));
\par         \cb1\cf0 q\cb3\cf22 .\cb3\cf13\b push_back\b0\cb3\cf22 (\cb1\cf0 t\cb3\cf22 );
\par         \cb1\cf0 dis\cb3\cf22 [\cb1\cf0 t\cb3\cf22 ] = \cb3\cf9 0\cb3\cf22 ;
\par         \cb1\cf0 vis\cb3\cf22 [\cb1\cf0 t\cb3\cf22 ] = \cb3\cf11\b true\b0\cb3\cf22 ;
\par         \cb3\cf11\b while \b0\cb3\cf22 (!\cb1\cf0 q\cb3\cf22 .\cb3\cf13\b empty\b0\cb3\cf22 ())
\par         \{
\par             \cb3\cf11\b int \b0\cb1\cf0 pos \cb3\cf22 = \cb1\cf0 q\cb3\cf22 .\cb3\cf13\b front\b0\cb3\cf22 ();
\par             \cb1\cf0 q\cb3\cf22 .\cb3\cf13\b pop_front\b0\cb3\cf22 ();
\par 
\par             \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 < \cb1\cf0 G\cb3\cf22 [\cb1\cf0 pos\cb3\cf22 ].\cb3\cf13\b size\b0\cb3\cf22 (); \cb1\cf0 i\cb3\cf22 ++)
\par             \{
\par                 \cb1\cf0 edge \cb3\cf22 & \cb1\cf0 e \cb3\cf22 = \cb1\cf0 es\cb3\cf22 [\cb1\cf0 G\cb3\cf22 [\cb1\cf0 pos\cb3\cf22 ][\cb1\cf0 i\cb3\cf22 ] ^ \cb3\cf9 1\cb3\cf22 ];
\par                 \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 e\cb3\cf22 .\cb1\cf0 cap \cb3\cf22 > \cb1\cf0 e\cb3\cf22 .\cb1\cf0 flow \cb3\cf22 && !\cb1\cf0 vis\cb3\cf22 [\cb1\cf0 e\cb3\cf22 .\cb1\cf0 from\cb3\cf22 ])
\par                 \{
\par                     \cb1\cf0 dis\cb3\cf22 [\cb1\cf0 e\cb3\cf22 .\cb1\cf0 from\cb3\cf22 ] = \cb1\cf0 dis\cb3\cf22 [\cb1\cf0 pos\cb3\cf22 ] + \cb3\cf9 1\cb3\cf22 ;
\par                     \cb1\cf0 vis\cb3\cf22 [\cb1\cf0 e\cb3\cf22 .\cb1\cf0 from\cb3\cf22 ] = \cb3\cf11\b true\b0\cb3\cf22 ;
\par                     \cb1\cf0 q\cb3\cf22 .\cb3\cf13\b push_back\b0\cb3\cf22 (\cb1\cf0 e\cb3\cf22 .\cb1\cf0 from\cb3\cf22 );
\par                 \}
\par             \}
\par 
\par         \}
\par 
\par     \}
\par     \cb3\cf11\b int \b0\cb1\cf0 aug\cb3\cf22 ()
\par     \{
\par         \cb3\cf11\b int \b0\cb1\cf0 x \cb3\cf22 = \cb1\cf0 t\cb3\cf22 ;
\par         \cb3\cf11\b int \b0\cb1\cf0 a \cb3\cf22 = \cb1\cf0 inf\cb3\cf22 ;
\par         \cb3\cf11\b while \b0\cb3\cf22 (\cb1\cf0 x \cb3\cf22 != \cb1\cf0 s\cb3\cf22 )
\par         \{
\par             \cb1\cf0 edge \cb3\cf22 & \cb1\cf0 e \cb3\cf22 = \cb1\cf0 es\cb3\cf22 [\cb1\cf0 p\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ]];
\par             \cb1\cf0 a \cb3\cf22 = \cb3\cf13\b min\b0\cb3\cf22 (\cb1\cf0 a\cb3\cf22 , \cb1\cf0 e\cb3\cf22 .\cb1\cf0 cap \cb3\cf22 - \cb1\cf0 e\cb3\cf22 .\cb1\cf0 flow\cb3\cf22 );
\par             \cb1\cf0 x \cb3\cf22 = \cb1\cf0 e\cb3\cf22 .\cb1\cf0 from\cb3\cf22 ;
\par         \}
\par         \cb1\cf0 x \cb3\cf22 = \cb1\cf0 t\cb3\cf22 ;
\par         \cb3\cf11\b while \b0\cb3\cf22 (\cb1\cf0 x \cb3\cf22 != \cb1\cf0 s\cb3\cf22 )
\par         \{
\par             \cb1\cf0 es\cb3\cf22 [\cb1\cf0 p\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ]].\cb1\cf0 flow \cb3\cf22 += \cb1\cf0 a\cb3\cf22 ;
\par             \cb1\cf0 es\cb3\cf22 [\cb1\cf0 p\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ] ^ \cb3\cf9 1\cb3\cf22 ].\cb1\cf0 flow \cb3\cf22 -= \cb1\cf0 a\cb3\cf22 ;
\par             \cb1\cf0 x \cb3\cf22 = \cb1\cf0 es\cb3\cf22 [\cb1\cf0 p\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ]].\cb1\cf0 from\cb3\cf22 ;
\par         \}
\par         \cb3\cf11\b return \b0\cb1\cf0 a\cb3\cf22 ;
\par     \}
\par     \cb3\cf11\b int \b0\cb1\cf0 maxflow\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 s\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 t\cb3\cf22 )
\par     \{
\par         \cb3\cf11\b int \b0\cb1\cf0 flow \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ;
\par         \cb3\cf11\b this\b0\cb3\cf22 ->\cb1\cf0 s \cb3\cf22 = \cb1\cf0 s\cb3\cf22 ;
\par         \cb3\cf11\b this\b0\cb3\cf22 ->\cb1\cf0 t \cb3\cf22 = \cb1\cf0 t\cb3\cf22 ;
\par         \cb1\cf0 bfs\cb3\cf22 ();
\par         \cb1\cf0 memset\cb3\cf22 (\cb1\cf0 num\cb3\cf22 , \cb3\cf9 0\cb3\cf22 , \cb3\cf11\b sizeof\b0\cb3\cf22 (\cb1\cf0 num\cb3\cf22 ));
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 < \cb1\cf0 n\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par         \{
\par             \cb1\cf0 num\cb3\cf22 [\cb1\cf0 dis\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]]++;
\par         \}
\par         \cb3\cf11\b int \b0\cb1\cf0 x \cb3\cf22 = \cb1\cf0 s\cb3\cf22 ;
\par         \cb1\cf0 memset\cb3\cf22 (\cb1\cf0 cur\cb3\cf22 , \cb3\cf9 0\cb3\cf22 , \cb3\cf11\b sizeof\b0\cb3\cf22 (\cb1\cf0 cur\cb3\cf22 ));
\par         \cb3\cf11\b while \b0\cb3\cf22 (\cb1\cf0 dis\cb3\cf22 [\cb1\cf0 s\cb3\cf22 ] < \cb1\cf0 n\cb3\cf22 )
\par         \{
\par             \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 x \cb3\cf22 == \cb1\cf0 t\cb3\cf22 )
\par             \{
\par                 \cb1\cf0 flow \cb3\cf22 += \cb1\cf0 aug\cb3\cf22 ();
\par                 \cb1\cf0 x \cb3\cf22 = \cb1\cf0 s\cb3\cf22 ;
\par             \}
\par             \cb3\cf11\b int \b0\cb1\cf0 ok \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ;
\par             \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb1\cf0 cur\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ]; \cb1\cf0 i \cb3\cf22 < \cb1\cf0 G\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ].\cb3\cf13\b size\b0\cb3\cf22 (); \cb1\cf0 i\cb3\cf22 ++)
\par             \{
\par                 \cb1\cf0 edge \cb3\cf22 & \cb1\cf0 e \cb3\cf22 = \cb1\cf0 es\cb3\cf22 [\cb1\cf0 G\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ][\cb1\cf0 i\cb3\cf22 ]];
\par                 \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 e\cb3\cf22 .\cb1\cf0 cap \cb3\cf22 > \cb1\cf0 e\cb3\cf22 .\cb1\cf0 flow \cb3\cf22 && \cb1\cf0 dis\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ] == \cb1\cf0 dis\cb3\cf22 [\cb1\cf0 e\cb3\cf22 .\cb1\cf0 to\cb3\cf22 ] + \cb3\cf9 1\cb3\cf22 )\cb3\cf5 //Advance
\par                 \cb3\cf22 \{
\par                     \cb1\cf0 ok \cb3\cf22 = \cb3\cf9 1\cb3\cf22 ;
\par                     \cb1\cf0 p\cb3\cf22 [\cb1\cf0 e\cb3\cf22 .\cb1\cf0 to\cb3\cf22 ] = \cb1\cf0 G\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ][\cb1\cf0 i\cb3\cf22 ];
\par                     \cb1\cf0 cur\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ] = \cb1\cf0 i\cb3\cf22 ;
\par                     \cb1\cf0 x \cb3\cf22 = \cb1\cf0 e\cb3\cf22 .\cb1\cf0 to\cb3\cf22 ;
\par                     \cb3\cf11\b break\b0\cb3\cf22 ;
\par                 \}
\par             \}
\par             \cb3\cf11\b if \b0\cb3\cf22 (!\cb1\cf0 ok\cb3\cf22 )
\par             \{
\par                 \cb3\cf11\b int \b0\cb1\cf0 m \cb3\cf22 = \cb1\cf0 n \cb3\cf22 - \cb3\cf9 1\cb3\cf22 ;
\par                 \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 < \cb1\cf0 G\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ].\cb3\cf13\b size\b0\cb3\cf22 (); \cb1\cf0 i\cb3\cf22 ++)
\par                 \{
\par                     \cb1\cf0 edge \cb3\cf22 &\cb1\cf0 e \cb3\cf22 = \cb1\cf0 es\cb3\cf22 [\cb1\cf0 G\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ][\cb1\cf0 i\cb3\cf22 ]];
\par                     \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 e\cb3\cf22 .\cb1\cf0 cap \cb3\cf22 > \cb1\cf0 e\cb3\cf22 .\cb1\cf0 flow\cb3\cf22 )
\par                     \{
\par                         \cb1\cf0 m \cb3\cf22 = \cb3\cf13\b min\b0\cb3\cf22 (\cb1\cf0 m\cb3\cf22 , \cb1\cf0 dis\cb3\cf22 [\cb1\cf0 e\cb3\cf22 .\cb1\cf0 to\cb3\cf22 ]);
\par                     \}
\par                 \}
\par                 \cb3\cf11\b if \b0\cb3\cf22 (--\cb1\cf0 num\cb3\cf22 [\cb1\cf0 dis\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ]] == \cb3\cf9 0\cb3\cf22 )
\par                 \{
\par                     \cb3\cf11\b break\b0\cb3\cf22 ;
\par                 \}
\par                 \cb1\cf0 num\cb3\cf22 [\cb1\cf0 dis\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ] = \cb1\cf0 m \cb3\cf22 + \cb3\cf9 1\cb3\cf22 ]++;
\par                 \cb1\cf0 cur\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ] = \cb3\cf9 0\cb3\cf22 ;
\par                 \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 x \cb3\cf22 != \cb1\cf0 s\cb3\cf22 )
\par                 \{
\par                     \cb1\cf0 x \cb3\cf22 = \cb1\cf0 es\cb3\cf22 [\cb1\cf0 p\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ]].\cb1\cf0 from\cb3\cf22 ;
\par                 \}
\par             \}
\par         \}
\par         \cb3\cf11\b return \b0\cb1\cf0 flow\cb3\cf22 ;
\par     \}
\par     \cb3\cf13\b vector\b0\cb3\cf22 <\cb3\cf13\b vector\b0\cb3\cf22 <\cb3\cf11\b int\b0\cb3\cf22 > > \cb1\cf0 path\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 flow\cb3\cf22 )
\par     \{
\par         \cb3\cf13\b vector\b0\cb3\cf22 <\cb3\cf13\b vector\b0\cb3\cf22 <\cb3\cf11\b int\b0\cb3\cf22 > > \cb1\cf0 ans\cb3\cf22 ;
\par         \cb3\cf11\b int \b0\cb1\cf0 x \cb3\cf22 = \cb1\cf0 s\cb3\cf22 ;
\par         \cb1\cf0 memset\cb3\cf22 (\cb1\cf0 cur\cb3\cf22 , \cb3\cf9 0\cb3\cf22 , \cb3\cf11\b sizeof\b0\cb3\cf22 (\cb1\cf0 cur\cb3\cf22 ));
\par         \cb3\cf11\b while \b0\cb3\cf22 (\cb1\cf0 flow\cb3\cf22 )
\par         \{
\par             \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 x \cb3\cf22 == \cb1\cf0 t\cb3\cf22 )
\par             \{
\par                 \cb3\cf13\b vector\b0\cb3\cf22 <\cb3\cf11\b int\b0\cb3\cf22 > \cb1\cf0 pt\cb3\cf22 ;
\par                 \cb3\cf11\b int \b0\cb1\cf0 a \cb3\cf22 = \cb1\cf0 inf\cb3\cf22 ;
\par                 \cb3\cf11\b while \b0\cb3\cf22 (\cb1\cf0 x \cb3\cf22 != \cb1\cf0 s\cb3\cf22 )
\par                 \{
\par                     \cb3\cf11\b if\b0\cb3\cf22 (!(\cb1\cf0 x \cb3\cf22 & \cb3\cf9 1\cb3\cf22 ))
\par                     \cb1\cf0 pt\cb3\cf22 .\cb3\cf13\b push_back\b0\cb3\cf22 ((\cb1\cf0 x \cb3\cf22 >> \cb3\cf9 1\cb3\cf22 )+\cb3\cf9 1\cb3\cf22 );
\par                     \cb1\cf0 a \cb3\cf22 = \cb3\cf13\b min\b0\cb3\cf22 (\cb1\cf0 a\cb3\cf22 , \cb1\cf0 es\cb3\cf22 [\cb1\cf0 p\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ]].\cb1\cf0 flow\cb3\cf22 );
\par                     \cb1\cf0 x \cb3\cf22 = \cb1\cf0 es\cb3\cf22 [\cb1\cf0 p\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ]].\cb1\cf0 from\cb3\cf22 ;
\par                 \}
\par                 \cb1\cf0 x \cb3\cf22 = \cb1\cf0 t\cb3\cf22 ;
\par                 \cb3\cf11\b while \b0\cb3\cf22 (\cb1\cf0 x \cb3\cf22 != \cb1\cf0 s\cb3\cf22 )
\par                 \{
\par                     \cb1\cf0 es\cb3\cf22 [\cb1\cf0 p\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ]].\cb1\cf0 flow \cb3\cf22 -= \cb1\cf0 a\cb3\cf22 ;
\par                     \cb1\cf0 x \cb3\cf22 = \cb1\cf0 es\cb3\cf22 [\cb1\cf0 p\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ]].\cb1\cf0 from\cb3\cf22 ;
\par                 \}
\par                 \cb1\cf0 flow \cb3\cf22 -= \cb1\cf0 a\cb3\cf22 ;
\par                 \cb1\cf0 pt\cb3\cf22 .\cb3\cf13\b push_back\b0\cb3\cf22 (\cb1\cf0 a\cb3\cf22 );
\par                 \cb1\cf0 ans\cb3\cf22 .\cb3\cf13\b push_back\b0\cb3\cf22 (\cb1\cf0 pt\cb3\cf22 );
\par 
\par             \}
\par             \cb3\cf11\b int \b0\cb1\cf0 ok \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ;
\par             \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb1\cf0 cur\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ]; \cb1\cf0 i \cb3\cf22 < \cb1\cf0 G\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ].\cb3\cf13\b size\b0\cb3\cf22 (); \cb1\cf0 i\cb3\cf22 ++)
\par             \{
\par                 \cb1\cf0 edge \cb3\cf22 & \cb1\cf0 e \cb3\cf22 = \cb1\cf0 es\cb3\cf22 [\cb1\cf0 G\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ][\cb1\cf0 i\cb3\cf22 ]];
\par                 \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 e\cb3\cf22 .\cb1\cf0 flow \cb3\cf22 > \cb3\cf9 0\cb3\cf22 )
\par                 \{
\par                     \cb1\cf0 p\cb3\cf22 [\cb1\cf0 e\cb3\cf22 .\cb1\cf0 to\cb3\cf22 ] = \cb1\cf0 G\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ][\cb1\cf0 i\cb3\cf22 ];
\par                     \cb1\cf0 ok \cb3\cf22 = \cb3\cf9 1\cb3\cf22 ;
\par                     \cb1\cf0 cur\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ] = \cb1\cf0 i\cb3\cf22 ;
\par                     \cb1\cf0 x \cb3\cf22 = \cb1\cf0 e\cb3\cf22 .\cb1\cf0 to\cb3\cf22 ;
\par                     \cb3\cf11\b break\b0\cb3\cf22 ;
\par                 \}
\par             \}
\par             \cb3\cf11\b if \b0\cb3\cf22 (!\cb1\cf0 ok\cb3\cf22 )
\par             \{
\par                 \cb1\cf0 cur\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ] = \cb3\cf9 0\cb3\cf22 ;
\par                 \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 x \cb3\cf22 != \cb1\cf0 s\cb3\cf22 )
\par                 \cb1\cf0 x \cb3\cf22 = \cb1\cf0 es\cb3\cf22 [\cb1\cf0 p\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ]].\cb1\cf0 from\cb3\cf22 ;
\par             \}
\par         \}
\par         \cb3\cf11\b return \b0\cb1\cf0 ans\cb3\cf22 ;
\par     \}
\par \};
\par 
\par 
\par \cb1\cf0 最小费用
\par 
\par \cb3\cf13 #include<stdio.h>        \cb3\cf5 //大概这么多头文件昂
\par \cb3\cf13 #include<string.h>
\par #include<vector>
\par #include<queue>
\par #include<algorithm>
\par \cb3\cf11\b using namespace \b0\cb3\cf13\b std\b0\cb3\cf22 ;
\par \cb3\cf11\b const int \b0\cb1\cf0 maxm\cb3\cf22 =\cb3\cf9 10000\cb3\cf22 +\cb3\cf9 100\cb3\cf22 ;    \cb3\cf5 //最大点数
\par \cb3\cf11\b const int \b0\cb1\cf0 INF\cb3\cf22 =\cb3\cf9 0x3f3f3f3f\cb3\cf22 ;
\par 
\par \cb3\cf11\b struct \b0\cb1\cf0 edge\cb3\cf22 \{        \cb3\cf5 //边：起点、终点、容量、流量、单位费用
\par     \cb3\cf11\b int \b0\cb1\cf0 from\cb3\cf22 ,\cb1\cf0 to\cb3\cf22 ,\cb1\cf0 c\cb3\cf22 ,\cb1\cf0 f\cb3\cf22 ,\cb1\cf0 cost\cb3\cf22 ;
\par     \cb1\cf0 edge\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 a\cb3\cf22 ,\cb3\cf11\b int \b0\cb1\cf0 b\cb3\cf22 ,\cb3\cf11\b int \b0\cb1\cf0 m\cb3\cf22 ,\cb3\cf11\b int \b0\cb1\cf0 n\cb3\cf22 ,\cb3\cf11\b int \b0\cb1\cf0 p\cb3\cf22 ):\cb1\cf0 from\cb3\cf22 (\cb1\cf0 a\cb3\cf22 ),\cb1\cf0 to\cb3\cf22 (\cb1\cf0 b\cb3\cf22 ),\cb1\cf0 c\cb3\cf22 (\cb1\cf0 m\cb3\cf22 ),\cb1\cf0 f\cb3\cf22 (\cb1\cf0 n\cb3\cf22 ),\cb1\cf0 cost\cb3\cf22 (\cb1\cf0 p\cb3\cf22 )\{\}
\par \};
\par 
\par \cb3\cf11\b int \b0\cb1\cf0 aabs\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 a\cb3\cf22 )\{
\par     \cb3\cf11\b return \b0\cb1\cf0 a\cb3\cf22 >=\cb3\cf9 0\cb3\cf22 ?\cb1\cf0 a\cb3\cf22 :-\cb1\cf0 a\cb3\cf22 ;
\par \}
\par 
\par \cb3\cf11\b struct \b0\cb1\cf0 MCMF\cb3\cf22 \{
\par     \cb3\cf11\b int \b0\cb1\cf0 m\cb3\cf22 ,\cb1\cf0 s\cb3\cf22 ,\cb1\cf0 t\cb3\cf22 ;
\par     \cb3\cf13\b vector\b0\cb3\cf22 <\cb1\cf0 edge\cb3\cf22 >\cb1\cf0 e\cb3\cf22 ;
\par     \cb3\cf13\b vector\b0\cb3\cf22 <\cb3\cf11\b int\b0\cb3\cf22 >\cb1\cf0 g\cb3\cf22 [\cb1\cf0 maxm\cb3\cf22 ];
\par     \cb3\cf11\b int \b0\cb1\cf0 dis\cb3\cf22 [\cb1\cf0 maxm\cb3\cf22 ],\cb1\cf0 a\cb3\cf22 [\cb1\cf0 maxm\cb3\cf22 ],\cb1\cf0 p\cb3\cf22 [\cb1\cf0 maxm\cb3\cf22 ];
\par     \cb3\cf11\b bool \b0\cb1\cf0 vis\cb3\cf22 [\cb1\cf0 maxm\cb3\cf22 ];
\par 
\par     \cb3\cf11\b void \b0\cb1\cf0 init\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 n\cb3\cf22 )\{        \cb3\cf5 //初始化函数
\par         \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ;\cb1\cf0 i\cb3\cf22 <=\cb1\cf0 n\cb3\cf22 ;\cb1\cf0 i\cb3\cf22 ++)\cb1\cf0 g\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ].\cb3\cf13\b clear\b0\cb3\cf22 ();
\par         \cb1\cf0 e\cb3\cf22 .\cb3\cf13\b clear\b0\cb3\cf22 ();
\par     \}
\par 
\par     \cb3\cf11\b void \b0\cb1\cf0 add\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 a\cb3\cf22 ,\cb3\cf11\b int \b0\cb1\cf0 b\cb3\cf22 ,\cb3\cf11\b int \b0\cb1\cf0 c\cb3\cf22 ,\cb3\cf11\b int \b0\cb1\cf0 v\cb3\cf22 )\{    \cb3\cf5 //加边函数
\par         \cb1\cf0 e\cb3\cf22 .\cb3\cf13\b push_back\b0\cb3\cf22 (\cb1\cf0 edge\cb3\cf22 (\cb1\cf0 a\cb3\cf22 ,\cb1\cf0 b\cb3\cf22 ,\cb1\cf0 c\cb3\cf22 ,\cb3\cf9 0\cb3\cf22 ,\cb1\cf0 v\cb3\cf22 ));
\par         \cb1\cf0 e\cb3\cf22 .\cb3\cf13\b push_back\b0\cb3\cf22 (\cb1\cf0 edge\cb3\cf22 (\cb1\cf0 b\cb3\cf22 ,\cb1\cf0 a\cb3\cf22 ,\cb3\cf9 0\cb3\cf22 ,\cb3\cf9 0\cb3\cf22 ,-\cb1\cf0 v\cb3\cf22 ));
\par         \cb1\cf0 m\cb3\cf22 =\cb1\cf0 e\cb3\cf22 .\cb3\cf13\b size\b0\cb3\cf22 ();
\par         \cb1\cf0 g\cb3\cf22 [\cb1\cf0 a\cb3\cf22 ].\cb3\cf13\b push_back\b0\cb3\cf22 (\cb1\cf0 m\cb3\cf22 -\cb3\cf9 2\cb3\cf22 );
\par         \cb1\cf0 g\cb3\cf22 [\cb1\cf0 b\cb3\cf22 ].\cb3\cf13\b push_back\b0\cb3\cf22 (\cb1\cf0 m\cb3\cf22 -\cb3\cf9 1\cb3\cf22 );
\par     \}
\par 
\par     \cb3\cf11\b bool \b0\cb1\cf0 spfa\cb3\cf22 (\cb3\cf11\b int\b0\cb3\cf22 & \cb1\cf0 flow\cb3\cf22 ,\cb3\cf11\b int\b0\cb3\cf22 & \cb1\cf0 cost\cb3\cf22 )\{
\par         \cb1\cf0 memset\cb3\cf22 (\cb1\cf0 dis\cb3\cf22 ,\cb3\cf9 0x3f\cb3\cf22 ,\cb3\cf11\b sizeof\b0\cb3\cf22 (\cb1\cf0 dis\cb3\cf22 ));
\par         \cb1\cf0 memset\cb3\cf22 (\cb1\cf0 vis\cb3\cf22 ,\cb3\cf9 0\cb3\cf22 ,\cb3\cf11\b sizeof\b0\cb3\cf22 (\cb1\cf0 vis\cb3\cf22 ));
\par         \cb3\cf13\b queue\b0\cb3\cf22 <\cb3\cf11\b int\b0\cb3\cf22 >\cb1\cf0 q\cb3\cf22 ;
\par         \cb1\cf0 q\cb3\cf22 .\cb1\cf0 push\cb3\cf22 (\cb1\cf0 s\cb3\cf22 );
\par         \cb1\cf0 vis\cb3\cf22 [\cb1\cf0 s\cb3\cf22 ]=\cb3\cf9 1\cb3\cf22 ;
\par         \cb1\cf0 dis\cb3\cf22 [\cb1\cf0 s\cb3\cf22 ]=\cb3\cf9 0\cb3\cf22 ;
\par         \cb1\cf0 p\cb3\cf22 [\cb1\cf0 s\cb3\cf22 ]=\cb3\cf9 0\cb3\cf22 ;
\par         \cb1\cf0 a\cb3\cf22 [\cb1\cf0 s\cb3\cf22 ]=\cb1\cf0 INF\cb3\cf22 ;
\par         \cb3\cf11\b while\b0\cb3\cf22 (!\cb1\cf0 q\cb3\cf22 .\cb3\cf13\b empty\b0\cb3\cf22 ())\{
\par             \cb3\cf11\b int \b0\cb1\cf0 u\cb3\cf22 =\cb1\cf0 q\cb3\cf22 .\cb3\cf13\b front\b0\cb3\cf22 ();\cb1\cf0 q\cb3\cf22 .\cb1\cf0 pop\cb3\cf22 ();
\par             \cb1\cf0 vis\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ]=\cb3\cf9 0\cb3\cf22 ;
\par             \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ;\cb1\cf0 i\cb3\cf22 <\cb1\cf0 g\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ].\cb3\cf13\b size\b0\cb3\cf22 ();\cb1\cf0 i\cb3\cf22 ++)\{
\par                 \cb1\cf0 edge tmp\cb3\cf22 =\cb1\cf0 e\cb3\cf22 [\cb1\cf0 g\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ][\cb1\cf0 i\cb3\cf22 ]];
\par                 \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 dis\cb3\cf22 [\cb1\cf0 tmp\cb3\cf22 .\cb1\cf0 to\cb3\cf22 ]>\cb1\cf0 dis\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ]+\cb1\cf0 tmp\cb3\cf22 .\cb1\cf0 cost\cb3\cf22 &&\cb1\cf0 tmp\cb3\cf22 .\cb1\cf0 c\cb3\cf22 >\cb1\cf0 tmp\cb3\cf22 .\cb1\cf0 f\cb3\cf22 )\{
\par                     \cb1\cf0 dis\cb3\cf22 [\cb1\cf0 tmp\cb3\cf22 .\cb1\cf0 to\cb3\cf22 ]=\cb1\cf0 dis\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ]+\cb1\cf0 tmp\cb3\cf22 .\cb1\cf0 cost\cb3\cf22 ;
\par                     \cb1\cf0 p\cb3\cf22 [\cb1\cf0 tmp\cb3\cf22 .\cb1\cf0 to\cb3\cf22 ]=\cb1\cf0 g\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ][\cb1\cf0 i\cb3\cf22 ];
\par                     \cb1\cf0 a\cb3\cf22 [\cb1\cf0 tmp\cb3\cf22 .\cb1\cf0 to\cb3\cf22 ]=\cb3\cf13\b min\b0\cb3\cf22 (\cb1\cf0 a\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ],\cb1\cf0 tmp\cb3\cf22 .\cb1\cf0 c\cb3\cf22 -\cb1\cf0 tmp\cb3\cf22 .\cb1\cf0 f\cb3\cf22 );
\par                     \cb3\cf11\b if\b0\cb3\cf22 (!\cb1\cf0 vis\cb3\cf22 [\cb1\cf0 tmp\cb3\cf22 .\cb1\cf0 to\cb3\cf22 ])\{
\par                         \cb1\cf0 q\cb3\cf22 .\cb1\cf0 push\cb3\cf22 (\cb1\cf0 tmp\cb3\cf22 .\cb1\cf0 to\cb3\cf22 );
\par                         \cb1\cf0 vis\cb3\cf22 [\cb1\cf0 tmp\cb3\cf22 .\cb1\cf0 to\cb3\cf22 ]=\cb3\cf9 1\cb3\cf22 ;
\par                     \}
\par                 \}
\par             \}
\par         \}
\par         \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 dis\cb3\cf22 [\cb1\cf0 t\cb3\cf22 ]==\cb1\cf0 INF\cb3\cf22 )\cb3\cf11\b return \b0\cb3\cf9 0\cb3\cf22 ;
\par         \cb1\cf0 flow\cb3\cf22 +=\cb1\cf0 a\cb3\cf22 [\cb1\cf0 t\cb3\cf22 ];
\par         \cb1\cf0 cost\cb3\cf22 +=\cb1\cf0 dis\cb3\cf22 [\cb1\cf0 t\cb3\cf22 ]*\cb1\cf0 a\cb3\cf22 [\cb1\cf0 t\cb3\cf22 ];
\par         \cb3\cf11\b int \b0\cb1\cf0 u\cb3\cf22 =\cb1\cf0 t\cb3\cf22 ;
\par         \cb3\cf11\b while\b0\cb3\cf22 (\cb1\cf0 u\cb3\cf22 !=\cb1\cf0 s\cb3\cf22 )\{
\par             \cb1\cf0 e\cb3\cf22 [\cb1\cf0 p\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ]].\cb1\cf0 f\cb3\cf22 +=\cb1\cf0 a\cb3\cf22 [\cb1\cf0 t\cb3\cf22 ];
\par             \cb1\cf0 e\cb3\cf22 [\cb1\cf0 p\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ]^\cb3\cf9 1\cb3\cf22 ].\cb1\cf0 f\cb3\cf22 -=\cb1\cf0 a\cb3\cf22 [\cb1\cf0 t\cb3\cf22 ];
\par             \cb1\cf0 u\cb3\cf22 =\cb1\cf0 e\cb3\cf22 [\cb1\cf0 p\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ]].\cb1\cf0 from\cb3\cf22 ;
\par         \}
\par         \cb3\cf11\b return \b0\cb3\cf9 1\cb3\cf22 ;
\par     \}
\par 
\par     \cb3\cf11\b int \b0\cb1\cf0 MF\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 s\cb3\cf22 ,\cb3\cf11\b int \b0\cb1\cf0 t\cb3\cf22 )\{
\par         \cb3\cf11\b this\b0\cb3\cf22 ->\cb1\cf0 s\cb3\cf22 =\cb1\cf0 s\cb3\cf22 ;\cb3\cf11\b this\b0\cb3\cf22 ->\cb1\cf0 t\cb3\cf22 =\cb1\cf0 t\cb3\cf22 ;
\par         \cb3\cf11\b int \b0\cb1\cf0 flow\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ,\cb1\cf0 cost\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ;
\par         \cb3\cf11\b while\b0\cb3\cf22 (\cb1\cf0 spfa\cb3\cf22 (\cb1\cf0 flow\cb3\cf22 ,\cb1\cf0 cost\cb3\cf22 ));
\par         \cb3\cf11\b return \b0\cb1\cf0 cost\cb3\cf22 ;
\par     \}
\par 
\par \};
\par 
\par \cb1\cf0 rmq
\par \cb3\cf5 //sparse table version
\par 
\par \cb3\cf13 #include<algorithm>
\par #include<cstdio>
\par \cb3\cf11\b using namespace \b0\cb3\cf13\b std\b0\cb3\cf22 ;
\par 
\par \cb3\cf11\b const int \b0\cb1\cf0 MAXN \cb3\cf22 = \cb3\cf9 50010\cb3\cf22 ;
\par \cb3\cf11\b int \b0\cb1\cf0 dp\cb3\cf22 [\cb1\cf0 MAXN\cb3\cf22 ][\cb3\cf9 20\cb3\cf22 ];
\par \cb3\cf11\b int \b0\cb1\cf0 dp2\cb3\cf22 [\cb1\cf0 MAXN\cb3\cf22 ][\cb3\cf9 20\cb3\cf22 ];
\par \cb3\cf11\b int \b0\cb1\cf0 mm\cb3\cf22 [\cb1\cf0 MAXN\cb3\cf22 ];
\par \cb3\cf5 //初始化RMQ, b数组下标从1开始，从0开始简单修改
\par \cb3\cf11\b void \b0\cb1\cf0 initRMQ\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 n\cb3\cf22 ,\cb3\cf11\b int \b0\cb1\cf0 b\cb3\cf22 [])
\par \{
\par     \cb1\cf0 mm\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ] = -\cb3\cf9 1\cb3\cf22 ;
\par     \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 1\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 <= \cb1\cf0 n\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par     \{
\par         \cb1\cf0 mm\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = ((\cb1\cf0 i\cb3\cf22 &(\cb1\cf0 i\cb3\cf22 -\cb3\cf9 1\cb3\cf22 )) == \cb3\cf9 0\cb3\cf22 )?\cb1\cf0 mm\cb3\cf22 [\cb1\cf0 i\cb3\cf22 -\cb3\cf9 1\cb3\cf22 ]+\cb3\cf9 1\cb3\cf22 :\cb1\cf0 mm\cb3\cf22 [\cb1\cf0 i\cb3\cf22 -\cb3\cf9 1\cb3\cf22 ];
\par         \cb1\cf0 dp2\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ][\cb3\cf9 0\cb3\cf22 ] = \cb1\cf0 dp\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ][\cb3\cf9 0\cb3\cf22 ] = \cb1\cf0 b\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ];
\par 
\par     \}
\par     \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 j \cb3\cf22 = \cb3\cf9 1\cb3\cf22 ; \cb1\cf0 j \cb3\cf22 <= \cb1\cf0 mm\cb3\cf22 [\cb1\cf0 n\cb3\cf22 ]; \cb1\cf0 j\cb3\cf22 ++)
\par         \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 1\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 + (\cb3\cf9 1\cb3\cf22 <<\cb1\cf0 j\cb3\cf22 ) -\cb3\cf9 1 \cb3\cf22 <= \cb1\cf0 n\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par             \{
\par                 \cb1\cf0 dp\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ][\cb1\cf0 j\cb3\cf22 ] = \cb3\cf13\b max\b0\cb3\cf22 (\cb1\cf0 dp\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ][\cb1\cf0 j\cb3\cf22 -\cb3\cf9 1\cb3\cf22 ],\cb1\cf0 dp\cb3\cf22 [\cb1\cf0 i\cb3\cf22 +(\cb3\cf9 1\cb3\cf22 <<(\cb1\cf0 j\cb3\cf22 -\cb3\cf9 1\cb3\cf22 ))][\cb1\cf0 j\cb3\cf22 -\cb3\cf9 1\cb3\cf22 ]);
\par                 \cb1\cf0 dp2\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ][\cb1\cf0 j\cb3\cf22 ] = \cb3\cf13\b min\b0\cb3\cf22 (\cb1\cf0 dp2\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ][\cb1\cf0 j\cb3\cf22 -\cb3\cf9 1\cb3\cf22 ],\cb1\cf0 dp2\cb3\cf22 [\cb1\cf0 i\cb3\cf22 +(\cb3\cf9 1\cb3\cf22 <<(\cb1\cf0 j\cb3\cf22 -\cb3\cf9 1\cb3\cf22 ))][\cb1\cf0 j\cb3\cf22 -\cb3\cf9 1\cb3\cf22 ]);
\par             \}
\par \}
\par \cb3\cf5 //查询最大值,x y inclusive>?
\par \cb3\cf11\b int \b0\cb1\cf0 rmq\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 x\cb3\cf22 ,\cb3\cf11\b int \b0\cb1\cf0 y\cb3\cf22 )
\par \{
\par     \cb3\cf11\b int \b0\cb1\cf0 k \cb3\cf22 = \cb1\cf0 mm\cb3\cf22 [\cb1\cf0 y\cb3\cf22 -\cb1\cf0 x\cb3\cf22 +\cb3\cf9 1\cb3\cf22 ];
\par     \cb3\cf11\b return \b0\cb3\cf13\b max\b0\cb3\cf22 (\cb1\cf0 dp\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ][\cb1\cf0 k\cb3\cf22 ],\cb1\cf0 dp\cb3\cf22 [\cb1\cf0 y\cb3\cf22 -(\cb3\cf9 1\cb3\cf22 <<\cb1\cf0 k\cb3\cf22 )+\cb3\cf9 1\cb3\cf22 ][\cb1\cf0 k\cb3\cf22 ]) - \cb3\cf13\b min\b0\cb3\cf22 (\cb1\cf0 dp2\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ][\cb1\cf0 k\cb3\cf22 ],\cb1\cf0 dp2\cb3\cf22 [\cb1\cf0 y\cb3\cf22 -(\cb3\cf9 1\cb3\cf22 <<\cb1\cf0 k\cb3\cf22 )+\cb3\cf9 1\cb3\cf22 ][\cb1\cf0 k\cb3\cf22 ]);
\par \}
\par 
\par \cb3\cf11\b int \b0\cb1\cf0 a\cb3\cf22 [\cb1\cf0 MAXN\cb3\cf22 ];
\par \cb3\cf11\b int \b0\cb1\cf0 main\cb3\cf22 ()
\par \{
\par     \cb3\cf11\b int \b0\cb1\cf0 n\cb3\cf22 ,\cb1\cf0 m\cb3\cf22 ,\cb1\cf0 x\cb3\cf22 ,\cb1\cf0 y\cb3\cf22 ;
\par     \cb3\cf11\b while\b0\cb3\cf22 (\cb1\cf0 scanf\cb3\cf22 (\cb3\cf17 "%d%d"\cb3\cf22 ,&\cb1\cf0 n\cb3\cf22 ,&\cb1\cf0 m\cb3\cf22 )!=\cb1\cf0 EOF\cb3\cf22 )
\par     \{
\par         \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 < \cb1\cf0 n\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par         \{
\par             \cb1\cf0 scanf\cb3\cf22 (\cb3\cf17 "%d"\cb3\cf22 ,\cb1\cf0 a \cb3\cf22 +\cb1\cf0 i\cb3\cf22 );
\par         \}
\par         \cb1\cf0 initRMQ\cb3\cf22 (\cb1\cf0 n\cb3\cf22 , \cb1\cf0 a \cb3\cf22 - \cb3\cf9 1\cb3\cf22 );
\par         \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 < \cb1\cf0 m\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par         \{
\par             \cb1\cf0 scanf\cb3\cf22 (\cb3\cf17 "%d%d"\cb3\cf22 , &\cb1\cf0 x\cb3\cf22 ,&\cb1\cf0 y\cb3\cf22 );
\par             \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "%d\\n"\cb3\cf22 ,\cb1\cf0 rmq\cb3\cf22 (\cb1\cf0 x\cb3\cf22 ,\cb1\cf0 y\cb3\cf22 ));
\par         \}
\par     \}
\par \}
\par 
\par 
\par \cb1\cf0 线段树，点修改\cb3\cf22 /\cb1\cf0 段修改，离线部分不完整
\par \cb3\cf11\b const int \b0\cb1\cf0 inf \cb3\cf22 = \cb3\cf9 0x3f3f3f3f\cb3\cf22 ;
\par \cb3\cf11\b const int \b0\cb1\cf0 maxn \cb3\cf22 = \cb3\cf9 100000 \cb3\cf22 + \cb3\cf9 10\cb3\cf22 ;
\par \cb3\cf11\b int \b0\cb1\cf0 minv\cb3\cf22 [\cb1\cf0 maxn\cb3\cf22 ];
\par \cb3\cf11\b int \b0\cb1\cf0 v0\cb3\cf22 ;
\par \cb3\cf11\b int \b0\cb3\cf22 * \cb1\cf0 pv\cb3\cf22 ;
\par \cb3\cf11\b void \b0\cb1\cf0 init\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 n\cb3\cf22 )
\par \{
\par     \cb1\cf0 v0 \cb3\cf22 = \cb3\cf9 1\cb3\cf22 ;
\par     \cb3\cf11\b while\b0\cb3\cf22 (\cb1\cf0 v0 \cb3\cf22 < \cb1\cf0 n\cb3\cf22 )
\par     \{
\par         \cb1\cf0 v0 \cb3\cf22 <<= \cb3\cf9 1\cb3\cf22 ;
\par     \}
\par     \cb1\cf0 pv \cb3\cf22 = \cb1\cf0 minv \cb3\cf22 + \cb1\cf0 v0\cb3\cf22 ;
\par \}
\par 
\par \cb3\cf5 //l, r, ql, qr ,all inclusive
\par \cb3\cf11\b int \b0\cb1\cf0 query\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 o\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 l\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 r\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 ql\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 qr\cb3\cf22 )
\par \{
\par     \cb3\cf11\b int \b0\cb1\cf0 mid \cb3\cf22 = \cb1\cf0 l \cb3\cf22 + (\cb1\cf0 r \cb3\cf22 - \cb1\cf0 l\cb3\cf22 ) / \cb3\cf9 2\cb3\cf22 ;
\par     \cb3\cf11\b int \b0\cb1\cf0 ans \cb3\cf22 = \cb1\cf0 inf\cb3\cf22 ;
\par     \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 ql \cb3\cf22 <= \cb1\cf0 l \cb3\cf22 && \cb1\cf0 r \cb3\cf22 <= \cb1\cf0 qr\cb3\cf22 )
\par     \{
\par         \cb3\cf11\b return \b0\cb1\cf0 minv\cb3\cf22 [\cb1\cf0 o\cb3\cf22 ];
\par     \}
\par     \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 ql \cb3\cf22 <= \cb1\cf0 mid\cb3\cf22 )
\par     \{
\par         \cb1\cf0 ans \cb3\cf22 = \cb3\cf13\b min\b0\cb3\cf22 (\cb1\cf0 ans\cb3\cf22 , \cb1\cf0 query\cb3\cf22 (\cb1\cf0 o \cb3\cf22 << \cb3\cf9 1\cb3\cf22 , \cb1\cf0 l\cb3\cf22 , \cb1\cf0 mid\cb3\cf22 , \cb1\cf0 ql\cb3\cf22 , \cb1\cf0 qr\cb3\cf22 ));
\par     \}
\par     \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 M \cb3\cf22 < \cb1\cf0 qr\cb3\cf22 )
\par     \{
\par         \cb1\cf0 ans \cb3\cf22 = \cb3\cf13\b min\b0\cb3\cf22 (\cb1\cf0 ans\cb3\cf22 , \cb1\cf0 query\cb3\cf22 (\cb1\cf0 o \cb3\cf22 * \cb3\cf9 2 \cb3\cf22 + \cb3\cf9 1\cb3\cf22 , \cb1\cf0 mid \cb3\cf22 + \cb3\cf9 1\cb3\cf22 , \cb1\cf0 r\cb3\cf22 , \cb1\cf0 ql\cb3\cf22 , \cb1\cf0 qr\cb3\cf22 ));
\par     \}
\par     \cb3\cf11\b return \b0\cb1\cf0 ans\cb3\cf22 ;
\par \}
\par \cb3\cf5 //Point update; l, r inclusive
\par \cb3\cf11\b void \b0\cb1\cf0 update\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 o\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 l\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 r\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 p\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 v\cb3\cf22 );
\par \{
\par     \cb3\cf11\b int \b0\cb1\cf0 mid \cb3\cf22 = \cb1\cf0 l \cb3\cf22 + (\cb1\cf0 r \cb3\cf22 - \cb1\cf0 l\cb3\cf22 )/\cb3\cf9 2\cb3\cf22 ;
\par     \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 l \cb3\cf22 == \cb1\cf0 r\cb3\cf22 )
\par     \{
\par         \cb1\cf0 minv\cb3\cf22 [\cb1\cf0 o\cb3\cf22 ] = \cb1\cf0 v\cb3\cf22 ;
\par     \}
\par     \cb3\cf11\b else
\par     \b0\cb3\cf22 \{
\par         \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 p \cb3\cf22 <= \cb1\cf0 mid\cb3\cf22 )
\par         \{
\par             \cb1\cf0 update\cb3\cf22 (\cb1\cf0 o \cb3\cf22 * \cb3\cf9 2\cb3\cf22 , \cb1\cf0 l\cb3\cf22 , \cb1\cf0 mid\cb3\cf22 , \cb1\cf0 p\cb3\cf22 , \cb1\cf0 v\cb3\cf22 );
\par         \}
\par         \cb3\cf11\b else
\par         \b0\cb3\cf22 \{
\par             \cb1\cf0 update\cb3\cf22 (\cb1\cf0 o \cb3\cf22 * \cb3\cf9 2 \cb3\cf22 + \cb3\cf9 1\cb3\cf22 , \cb1\cf0 mid \cb3\cf22 + \cb3\cf9 1\cb3\cf22 , \cb1\cf0 r\cb3\cf22 , \cb1\cf0 p\cb3\cf22 , \cb1\cf0 v\cb3\cf22 );
\par         \}
\par         \cb1\cf0 minv\cb3\cf22 [\cb1\cf0 o\cb3\cf22 ] = \cb3\cf13\b min\b0\cb3\cf22 (\cb1\cf0 minv\cb3\cf22 [\cb1\cf0 o \cb3\cf22 * \cb3\cf9 2 \cb3\cf22 + \cb3\cf9 1\cb3\cf22 ], \cb1\cf0 minv\cb3\cf22 [\cb1\cf0 o \cb3\cf22 * \cb3\cf9 2\cb3\cf22 ]);
\par     \}
\par \}
\par 
\par \cb3\cf11\b void \b0\cb1\cf0 maintain\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 o\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 l\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 r\cb3\cf22 )
\par \{
\par     \cb3\cf11\b int \b0\cb1\cf0 lc \cb3\cf22 = \cb1\cf0 o \cb3\cf22 * \cb3\cf9 2\cb3\cf22 ;
\par     \cb3\cf11\b int \b0\cb1\cf0 rc \cb3\cf22 = \cb1\cf0 o \cb3\cf22 * \cb3\cf9 2 \cb3\cf22 + \cb3\cf9 1\cb3\cf22 ;
\par    \cb3\cf5 // sumv[o] = minv[lc] = maxv[o] = 0;
\par     \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 r \cb3\cf22 > \cb1\cf0 l\cb3\cf22 )
\par     \{
\par         \cb1\cf0 sumv\cb3\cf22 [\cb1\cf0 o\cb3\cf22 ] = \cb1\cf0 sumv\cb3\cf22 [\cb1\cf0 lc\cb3\cf22 ] + \cb1\cf0 sumv\cb3\cf22 [\cb1\cf0 rc\cb3\cf22 ];
\par         \cb1\cf0 minv\cb3\cf22 [\cb1\cf0 o\cb3\cf22 ] = \cb3\cf13\b min\b0\cb3\cf22 (\cb1\cf0 minv\cb3\cf22 [\cb1\cf0 lc\cb3\cf22 ], \cb1\cf0 minv\cb3\cf22 [\cb1\cf0 rc\cb3\cf22 ]);
\par         \cb1\cf0 maxv\cb3\cf22 [\cb1\cf0 o\cb3\cf22 ] = \cb3\cf13\b max\b0\cb3\cf22 (\cb1\cf0 maxv\cb3\cf22 [\cb1\cf0 lc\cb3\cf22 ], \cb1\cf0 maxv\cb3\cf22 [\cb1\cf0 rc\cb3\cf22 ]);
\par     \}
\par     \cb1\cf0 minv\cb3\cf22 [\cb1\cf0 o\cb3\cf22 ] += \cb1\cf0 addv\cb3\cf22 [\cb1\cf0 o\cb3\cf22 ];
\par     \cb1\cf0 maxv\cb3\cf22 [\cb1\cf0 o\cb3\cf22 ] += \cb1\cf0 addv\cb3\cf22 [\cb1\cf0 o\cb3\cf22 ];
\par     \cb1\cf0 sumv\cb3\cf22 [\cb1\cf0 o\cb3\cf22 ] += \cb1\cf0 addv\cb3\cf22 [\cb1\cf0 o\cb3\cf22 ] * (\cb1\cf0 R \cb3\cf22 - \cb1\cf0 L \cb3\cf22 + \cb3\cf9 1\cb3\cf22 );
\par \}
\par 
\par \cb3\cf11\b void \b0\cb1\cf0 update\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 o\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 l\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 r\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 v\cb3\cf22 )
\par \{
\par     \cb3\cf11\b int \b0\cb1\cf0 lc \cb3\cf22 = \cb1\cf0 o \cb3\cf22 * \cb3\cf9 2\cb3\cf22 ;
\par     \cb3\cf11\b int \b0\cb1\cf0 rc \cb3\cf22 = \cb1\cf0 o \cb3\cf22 * \cb3\cf9 2 \cb3\cf22 + \cb3\cf9 1\cb3\cf22 ;
\par     \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 y1 \cb3\cf22 <= \cb1\cf0 l \cb3\cf22 && \cb1\cf0 y2 \cb3\cf22 >= \cb1\cf0 r\cb3\cf22 )
\par     \{
\par         \cb1\cf0 add\cb3\cf22 [\cb1\cf0 o\cb3\cf22 ] += \cb1\cf0 v\cb3\cf22 ;
\par     \}
\par     \cb3\cf11\b else
\par     \b0\cb3\cf22 \{
\par         \cb3\cf11\b int \b0\cb1\cf0 mid \cb3\cf22 = \cb1\cf0 l \cb3\cf22 +(\cb1\cf0 r \cb3\cf22 - \cb1\cf0 l\cb3\cf22 ) / \cb3\cf9 2\cb3\cf22 ;
\par         \cb3\cf11\b if\b0\cb3\cf22 ( \cb1\cf0 y1 \cb3\cf22 <= \cb1\cf0 mid\cb3\cf22 )
\par         \{
\par             \cb1\cf0 update\cb3\cf22 (\cb1\cf0 lc\cb3\cf22 , \cb1\cf0 l\cb3\cf22 , \cb1\cf0 mid\cb3\cf22 );
\par         \}
\par         \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 y2 \cb3\cf22 > \cb1\cf0 mid\cb3\cf22 )
\par         \{
\par             \cb1\cf0 update\cb3\cf22 (\cb1\cf0 rc\cb3\cf22 , \cb1\cf0 mid \cb3\cf22 + \cb3\cf9 1\cb3\cf22 , \cb1\cf0 r\cb3\cf22 );
\par         \}
\par         \cb1\cf0 maintain\cb3\cf22 (\cb1\cf0 o\cb3\cf22 , \cb1\cf0 l\cb3\cf22 , \cb1\cf0 r\cb3\cf22 );
\par     \}
\par \}
\par \cb3\cf11\b int \b0\cb1\cf0 _min\cb3\cf22 , \cb1\cf0 _max\cb3\cf22 , \cb1\cf0 _sum\cb3\cf22 ;
\par \cb3\cf11\b void \b0\cb1\cf0 query\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 o\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 l\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 r\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 add\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 y1\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 y2\cb3\cf22 )
\par \{
\par     \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 y1 \cb3\cf22 <= \cb1\cf0 l \cb3\cf22 && \cb1\cf0 y2 \cb3\cf22 >= \cb1\cf0 r\cb3\cf22 )
\par     \{
\par         \cb1\cf0 _sum \cb3\cf22 += \cb1\cf0 sumv\cb3\cf22 [\cb1\cf0 o\cb3\cf22 ] + \cb1\cf0 add \cb3\cf22 * (\cb1\cf0 r \cb3\cf22 - \cb1\cf0 l \cb3\cf22 + \cb3\cf9 1\cb3\cf22 );
\par         \cb1\cf0 _min \cb3\cf22 = \cb3\cf13\b min\b0\cb3\cf22 (\cb1\cf0 _min\cb3\cf22 , \cb1\cf0 minv\cb3\cf22 [\cb1\cf0 o\cb3\cf22 ] + \cb1\cf0 add\cb3\cf22 );
\par         \cb1\cf0 _max \cb3\cf22 = \cb3\cf13\b max\b0\cb3\cf22 (\cb1\cf0 _max\cb3\cf22 , \cb1\cf0 minv\cb3\cf22 [\cb1\cf0 o\cb3\cf22 ] + \cb1\cf0 add\cb3\cf22 );
\par     \}
\par     \cb3\cf11\b else
\par     \b0\cb3\cf22 \{
\par         \cb3\cf11\b int \b0\cb1\cf0 mid \cb3\cf22 = \cb1\cf0 l \cb3\cf22 + (\cb1\cf0 r \cb3\cf22 - \cb1\cf0 l\cb3\cf22 ) / \cb3\cf9 2\cb3\cf22 ;
\par         \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 y1 \cb3\cf22 <= \cb1\cf0 mid\cb3\cf22 )
\par         \{
\par             \cb1\cf0 query\cb3\cf22 (\cb1\cf0 o \cb3\cf22 * \cb3\cf9 2\cb3\cf22 , \cb1\cf0 l\cb3\cf22 , \cb1\cf0 mid\cb3\cf22 , \cb1\cf0 add \cb3\cf22 + \cb1\cf0 addv\cb3\cf22 [\cb1\cf0 o\cb3\cf22 ], \cb1\cf0 y1\cb3\cf22 , \cb1\cf0 y2\cb3\cf22 );
\par         \}
\par         \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 y2 \cb3\cf22 > \cb1\cf0 mid\cb3\cf22 )
\par         \{
\par             \cb1\cf0 query\cb3\cf22 (\cb1\cf0 o \cb3\cf22 * \cb3\cf9 2 \cb3\cf22 + \cb3\cf9 1\cb3\cf22 , \cb1\cf0 mid \cb3\cf22 + \cb3\cf9 1\cb3\cf22 , \cb1\cf0 r\cb3\cf22 , \cb1\cf0 add \cb3\cf22 + \cb1\cf0 addv\cb3\cf22 [\cb1\cf0 o\cb3\cf22 ], \cb1\cf0 y1\cb3\cf22 , \cb1\cf0 y2\cb3\cf22 );
\par         \}
\par     \}
\par \}
\par 
\par \cb3\cf11\b void \b0\cb1\cf0 update\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 o\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 l\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 r\cb3\cf22 )
\par \{
\par     \cb3\cf11\b int \b0\cb1\cf0 lc \cb3\cf22 = \cb1\cf0 o \cb3\cf22 * \cb3\cf9 2\cb3\cf22 , \cb1\cf0 rc \cb3\cf22 = \cb1\cf0 o \cb3\cf22 * \cb3\cf9 2 \cb3\cf22 + \cb3\cf9 1\cb3\cf22 ;
\par     \cb3\cf11\b if\b0\cb3\cf22 ()
\par \}
\par 
\par 
\par 
\par }