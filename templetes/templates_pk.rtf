{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fmodern Courier New;}}
{\colortbl\red0\green0\blue0;\red255\green255\blue255;\red200\green200\blue200;\red0\green0\blue0;\red160\green160\blue160;\red190\green190\blue230;\red128\green128\blue255;\red0\green128\blue128;\red128\green0\blue0;\red240\green0\blue240;\red240\green200\blue240;\red0\green0\blue160;\red135\green135\blue200;\red0\green160\blue0;\red154\green200\blue154;\red190\green0\blue190;\red190\green137\blue190;\red0\green0\blue255;\red190\green190\blue255;\red224\green160\blue0;\red224\green206\blue159;\red132\green160\blue132;\red255\green0\blue0;\red255\green200\blue200;\red128\green255\blue255;\red64\green64\blue128;\red133\green133\blue172;}
{\info{\comment Generated by the Code::Blocks RTF Exporter plugin}
{\title Untitled}}

\deflang1033\pard\plain\f0\fs16 \cb3\cf5 //There are some templates for Beijing Regional
\par //I can assume that c++11 is unable using these templates.
\par //which is caused by the odd Judge Computer of POJ!!!
\par 
\par //Part 1
\par //Search
\par 
\par //DLX dancing link
\par //Accurate Cover
\par \cb3\cf4 /* ***********************************************
\par Author        :kuangbin
\par Index starts from 1. 横纵坐标都从1开始
\par Be conducted by 外部调用 dance(0)
\par ansd should be 为 ans数组的size
\par the answer is in ans数组 array存了答案
\par 
\par ************************************************ */
\par \cb3\cf13 #define _CRT_SECURE_NO_WARNINGS
\par #include <stdio.h>
\par #include <string.h>
\par #include <iostream>
\par #include <algorithm>
\par #include <vector>
\par #include <queue>
\par #include <set>
\par #include <map>
\par #include <string>
\par #include <math.h>
\par #include <stdlib.h>
\par #include <time.h>
\par \cb3\cf11\b using namespace \b0\cb3\cf13\b std\b0\cb3\cf22 ;
\par \cb3\cf11\b const int \b0\cb1\cf0 maxnode \cb3\cf22 = \cb3\cf9 100010\cb3\cf22 ;
\par \cb3\cf11\b const int \b0\cb1\cf0 MaxM \cb3\cf22 = \cb3\cf9 1010\cb3\cf22 ;
\par \cb3\cf11\b const int \b0\cb1\cf0 MaxN \cb3\cf22 = \cb3\cf9 1010\cb3\cf22 ;
\par \cb3\cf5 //精确覆盖
\par \cb3\cf11\b struct \b0\cb1\cf0 DLX
\par \cb3\cf22 \{
\par     \cb3\cf11\b int \b0\cb1\cf0 n\cb3\cf22 ,\cb1\cf0 m\cb3\cf22 ,\cb3\cf13\b size\b0\cb3\cf22 ;
\par     \cb3\cf11\b int \b0\cb1\cf0 U\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ],\cb1\cf0 D\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ],\cb1\cf0 R\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ],\cb1\cf0 L\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ],\cb1\cf0 Row\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ],\cb1\cf0 Col\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ];
\par     \cb3\cf11\b int \b0\cb1\cf0 H\cb3\cf22 [\cb1\cf0 MaxN\cb3\cf22 ], \cb1\cf0 S\cb3\cf22 [\cb1\cf0 MaxM\cb3\cf22 ];
\par     \cb3\cf11\b int \b0\cb1\cf0 ansd\cb3\cf22 , \cb1\cf0 ans\cb3\cf22 [\cb1\cf0 MaxN\cb3\cf22 ];
\par     \cb3\cf11\b void \b0\cb1\cf0 init\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 _n\cb3\cf22 ,\cb3\cf11\b int \b0\cb1\cf0 _m\cb3\cf22 )
\par     \{
\par         \cb1\cf0 n \cb3\cf22 = \cb1\cf0 _n\cb3\cf22 ;
\par         \cb1\cf0 m \cb3\cf22 = \cb1\cf0 _m\cb3\cf22 ;
\par         \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ;\cb1\cf0 i \cb3\cf22 <= \cb1\cf0 m\cb3\cf22 ;\cb1\cf0 i\cb3\cf22 ++)
\par         \{
\par             \cb1\cf0 S\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = \cb3\cf9 0\cb3\cf22 ;
\par             \cb1\cf0 U\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = \cb1\cf0 i\cb3\cf22 ;
\par             \cb1\cf0 L\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = \cb1\cf0 i\cb3\cf22 -\cb3\cf9 1\cb3\cf22 ;
\par             \cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = \cb1\cf0 i\cb3\cf22 +\cb3\cf9 1\cb3\cf22 ;
\par         \}
\par         \cb1\cf0 R\cb3\cf22 [\cb1\cf0 m\cb3\cf22 ] = \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 L\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ] = \cb1\cf0 m\cb3\cf22 ;
\par         \cb3\cf13\b size \b0\cb3\cf22 = \cb1\cf0 m\cb3\cf22 ;
\par         \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 1\cb3\cf22 ;\cb1\cf0 i \cb3\cf22 <= \cb1\cf0 n\cb3\cf22 ;\cb1\cf0 i\cb3\cf22 ++)
\par             \cb1\cf0 H\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = -\cb3\cf9 1\cb3\cf22 ;
\par     \}
\par     \cb3\cf11\b void \b0\cb1\cf0 Link\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 r\cb3\cf22 ,\cb3\cf11\b int \b0\cb1\cf0 c\cb3\cf22 )
\par     \{
\par         ++\cb1\cf0 S\cb3\cf22 [\cb1\cf0 Col\cb3\cf22 [++\cb3\cf13\b size\b0\cb3\cf22 ]=\cb1\cf0 c\cb3\cf22 ];
\par         \cb1\cf0 Row\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 r\cb3\cf22 ;
\par         \cb1\cf0 D\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ];
\par         \cb1\cf0 U\cb3\cf22 [\cb1\cf0 D\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ]] = \cb3\cf13\b size\b0\cb3\cf22 ;
\par         \cb1\cf0 U\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 c\cb3\cf22 ;
\par         \cb1\cf0 D\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ] = \cb3\cf13\b size\b0\cb3\cf22 ;
\par         \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 H\cb3\cf22 [\cb1\cf0 r\cb3\cf22 ] < \cb3\cf9 0\cb3\cf22 )\cb1\cf0 H\cb3\cf22 [\cb1\cf0 r\cb3\cf22 ] = \cb1\cf0 L\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 R\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb3\cf13\b size\b0\cb3\cf22 ;
\par         \cb3\cf11\b else
\par         \b0\cb3\cf22 \{
\par             \cb1\cf0 R\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 H\cb3\cf22 [\cb1\cf0 r\cb3\cf22 ]];
\par             \cb1\cf0 L\cb3\cf22 [\cb1\cf0 R\cb3\cf22 [\cb1\cf0 H\cb3\cf22 [\cb1\cf0 r\cb3\cf22 ]]] = \cb3\cf13\b size\b0\cb3\cf22 ;
\par             \cb1\cf0 L\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 H\cb3\cf22 [\cb1\cf0 r\cb3\cf22 ];
\par             \cb1\cf0 R\cb3\cf22 [\cb1\cf0 H\cb3\cf22 [\cb1\cf0 r\cb3\cf22 ]] = \cb3\cf13\b size\b0\cb3\cf22 ;
\par         \}
\par     \}
\par     \cb3\cf11\b void \b0\cb3\cf13\b remove\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 c\cb3\cf22 )
\par     \{
\par         \cb1\cf0 L\cb3\cf22 [\cb1\cf0 R\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ]] = \cb1\cf0 L\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ]; \cb1\cf0 R\cb3\cf22 [\cb1\cf0 L\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ]] = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ];
\par         \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ];\cb1\cf0 i \cb3\cf22 != \cb1\cf0 c\cb3\cf22 ;\cb1\cf0 i \cb3\cf22 = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ])
\par             \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 j \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ];\cb1\cf0 j \cb3\cf22 != \cb1\cf0 i\cb3\cf22 ;\cb1\cf0 j \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ])
\par             \{
\par                 \cb1\cf0 U\cb3\cf22 [\cb1\cf0 D\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ]] = \cb1\cf0 U\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ];
\par                 \cb1\cf0 D\cb3\cf22 [\cb1\cf0 U\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ]] = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ];
\par                 --\cb1\cf0 S\cb3\cf22 [\cb1\cf0 Col\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ]];
\par             \}
\par     \}
\par     \cb3\cf11\b void \b0\cb1\cf0 resume\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 c\cb3\cf22 )
\par     \{
\par         \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb1\cf0 U\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ];\cb1\cf0 i \cb3\cf22 != \cb1\cf0 c\cb3\cf22 ;\cb1\cf0 i \cb3\cf22 = \cb1\cf0 U\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ])
\par             \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 j \cb3\cf22 = \cb1\cf0 L\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ];\cb1\cf0 j \cb3\cf22 != \cb1\cf0 i\cb3\cf22 ;\cb1\cf0 j \cb3\cf22 = \cb1\cf0 L\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ])
\par                 ++\cb1\cf0 S\cb3\cf22 [\cb1\cf0 Col\cb3\cf22 [\cb1\cf0 U\cb3\cf22 [\cb1\cf0 D\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ]]=\cb1\cf0 D\cb3\cf22 [\cb1\cf0 U\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ]]=\cb1\cf0 j\cb3\cf22 ]];
\par         \cb1\cf0 L\cb3\cf22 [\cb1\cf0 R\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ]] = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 L\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ]] = \cb1\cf0 c\cb3\cf22 ;
\par     \}
\par     \cb3\cf5 //d为递归深度
\par     \cb3\cf11\b bool \b0\cb1\cf0 Dance\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 d\cb3\cf22 )
\par     \{
\par         \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 R\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ] == \cb3\cf9 0\cb3\cf22 )
\par         \{
\par             \cb1\cf0 ansd \cb3\cf22 = \cb1\cf0 d\cb3\cf22 ;
\par             \cb3\cf11\b return true\b0\cb3\cf22 ;
\par         \}
\par         \cb3\cf11\b int \b0\cb1\cf0 c \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ];
\par         \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ];\cb1\cf0 i \cb3\cf22 != \cb3\cf9 0\cb3\cf22 ;\cb1\cf0 i \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ])
\par             \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 S\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] < \cb1\cf0 S\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ])
\par                 \cb1\cf0 c \cb3\cf22 = \cb1\cf0 i\cb3\cf22 ;
\par         \cb3\cf13\b remove\b0\cb3\cf22 (\cb1\cf0 c\cb3\cf22 );
\par         \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ];\cb1\cf0 i \cb3\cf22 != \cb1\cf0 c\cb3\cf22 ;\cb1\cf0 i \cb3\cf22 = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ])
\par         \{
\par             \cb1\cf0 ans\cb3\cf22 [\cb1\cf0 d\cb3\cf22 ] = \cb1\cf0 Row\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ];
\par             \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 j \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]; \cb1\cf0 j \cb3\cf22 != \cb1\cf0 i\cb3\cf22 ;\cb1\cf0 j \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ])\cb3\cf13\b remove\b0\cb3\cf22 (\cb1\cf0 Col\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ]);
\par             \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 Dance\cb3\cf22 (\cb1\cf0 d\cb3\cf22 +\cb3\cf9 1\cb3\cf22 ))\cb3\cf11\b return true\b0\cb3\cf22 ;
\par             \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 j \cb3\cf22 = \cb1\cf0 L\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]; \cb1\cf0 j \cb3\cf22 != \cb1\cf0 i\cb3\cf22 ;\cb1\cf0 j \cb3\cf22 = \cb1\cf0 L\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ])\cb1\cf0 resume\cb3\cf22 (\cb1\cf0 Col\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ]);
\par         \}
\par         \cb1\cf0 resume\cb3\cf22 (\cb1\cf0 c\cb3\cf22 );
\par         \cb3\cf11\b return false\b0\cb3\cf22 ;
\par     \}
\par \};
\par 
\par \cb1\cf0 DLX g\cb3\cf22 ;
\par 
\par 
\par 
\par \cb3\cf5 //重复覆盖
\par //Multiple Cover
\par \cb3\cf4 /* ***********************************************
\par Author        :kuangbin
\par 横纵坐标都从1开始
\par 外部调用dance(0)
\par ansd为ans数组的size
\par ans数组存了答案
\par *************************************************/
\par \cb3\cf13 #define _CRT_SECURE_NO_WARNINGS
\par #include <stdio.h>
\par #include<functional>
\par #include <string.h>
\par #include <iostream>
\par #include <algorithm>
\par #include <vector>
\par #include <queue>
\par #include <set>
\par #include <map>
\par #include <string>
\par #include <math.h>
\par #include <stdlib.h>
\par #include <time.h>
\par \cb3\cf11\b using namespace \b0\cb3\cf13\b std\b0\cb3\cf22 ;
\par \cb3\cf11\b const int \b0\cb1\cf0 inf \cb3\cf22 = \cb3\cf9 0x3f3f3f3f\cb3\cf22 ;
\par \cb3\cf11\b const int \b0\cb1\cf0 maxnode \cb3\cf22 = \cb3\cf9 100010\cb3\cf22 ;
\par \cb3\cf11\b const int \b0\cb1\cf0 maxn \cb3\cf22 = \cb3\cf9 1010\cb3\cf22 ;
\par \cb3\cf11\b const int \b0\cb1\cf0 MaxN \cb3\cf22 = \cb3\cf9 1010\cb3\cf22 ;
\par 
\par \cb3\cf11\b struct \b0\cb1\cf0 DLX
\par \cb3\cf22 \{
\par     \cb3\cf11\b int \b0\cb1\cf0 n\cb3\cf22 , \cb1\cf0 m\cb3\cf22 , \cb3\cf13\b size\b0\cb3\cf22 ;
\par     \cb3\cf11\b int \b0\cb1\cf0 U\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ], \cb1\cf0 D\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ], \cb1\cf0 R\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ], \cb1\cf0 L\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ];
\par     \cb3\cf11\b int \b0\cb1\cf0 Row\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ], \cb1\cf0 Col\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ];
\par     \cb3\cf11\b int \b0\cb1\cf0 H\cb3\cf22 [\cb1\cf0 MaxN\cb3\cf22 ], \cb1\cf0 S\cb3\cf22 [\cb1\cf0 MaxN\cb3\cf22 ];
\par     \cb3\cf11\b int \b0\cb1\cf0 ansd\cb3\cf22 ;
\par     \cb3\cf11\b int \b0\cb1\cf0 K\cb3\cf22 ;
\par     \cb3\cf11\b void \b0\cb1\cf0 init\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 _n\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 _m\cb3\cf22 )
\par     \{
\par         \cb1\cf0 n \cb3\cf22 = \cb1\cf0 _n\cb3\cf22 ;
\par         \cb1\cf0 ansd \cb3\cf22 = \cb1\cf0 inf\cb3\cf22 ;
\par         \cb1\cf0 m \cb3\cf22 = \cb1\cf0 _m\cb3\cf22 ;
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 <= \cb1\cf0 m\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par         \{
\par             \cb1\cf0 U\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = \cb1\cf0 i\cb3\cf22 ;
\par             \cb1\cf0 L\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = \cb1\cf0 i \cb3\cf22 - \cb3\cf9 1\cb3\cf22 ;
\par             \cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = \cb1\cf0 i \cb3\cf22 + \cb3\cf9 1\cb3\cf22 ;
\par             \cb1\cf0 S\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = \cb3\cf9 0\cb3\cf22 ;
\par         \}
\par         \cb1\cf0 R\cb3\cf22 [\cb1\cf0 m\cb3\cf22 ] = \cb3\cf9 0\cb3\cf22 ;
\par         \cb1\cf0 L\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ] = \cb1\cf0 m\cb3\cf22 ;
\par         \cb3\cf13\b size \b0\cb3\cf22 = \cb1\cf0 m\cb3\cf22 ;
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 1\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 <= \cb1\cf0 n\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par         \{
\par             \cb1\cf0 H\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = -\cb3\cf9 1\cb3\cf22 ;
\par         \}
\par 
\par     \}
\par     \cb3\cf11\b void \b0\cb1\cf0 Link\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 r\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 c\cb3\cf22 )
\par     \{
\par         \cb1\cf0 S\cb3\cf22 [\cb1\cf0 Col\cb3\cf22 [++\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 c\cb3\cf22 ]++;
\par         \cb1\cf0 Row\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 r\cb3\cf22 ;
\par         \cb1\cf0 U\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 U\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ];
\par         \cb1\cf0 D\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 c\cb3\cf22 ;
\par         \cb1\cf0 D\cb3\cf22 [\cb1\cf0 U\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ]] = \cb3\cf13\b size\b0\cb3\cf22 ;
\par         \cb1\cf0 U\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ] = \cb3\cf13\b size\b0\cb3\cf22 ;
\par         \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 H\cb3\cf22 [\cb1\cf0 r\cb3\cf22 ] == -\cb3\cf9 1\cb3\cf22 )
\par         \{
\par             \cb1\cf0 H\cb3\cf22 [\cb1\cf0 r\cb3\cf22 ] = \cb1\cf0 R\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 L\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb3\cf13\b size\b0\cb3\cf22 ;
\par         \}
\par         \cb3\cf11\b else
\par         \b0\cb3\cf22 \{
\par             \cb1\cf0 R\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 H\cb3\cf22 [\cb1\cf0 r\cb3\cf22 ];
\par             \cb1\cf0 L\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ] = \cb1\cf0 L\cb3\cf22 [\cb1\cf0 H\cb3\cf22 [\cb1\cf0 r\cb3\cf22 ]];
\par             \cb1\cf0 R\cb3\cf22 [\cb1\cf0 L\cb3\cf22 [\cb3\cf13\b size\b0\cb3\cf22 ]] = \cb3\cf13\b size\b0\cb3\cf22 ;
\par             \cb1\cf0 L\cb3\cf22 [\cb1\cf0 H\cb3\cf22 [\cb1\cf0 r\cb3\cf22 ]] = \cb3\cf13\b size\b0\cb3\cf22 ;
\par         \}
\par     \}
\par     \cb3\cf11\b void \b0\cb3\cf13\b remove\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 c\cb3\cf22 )
\par     \{
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ]; \cb1\cf0 i \cb3\cf22 != \cb1\cf0 c\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ])
\par         \{
\par             \cb1\cf0 L\cb3\cf22 [\cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]] = \cb1\cf0 L\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ];
\par             \cb1\cf0 R\cb3\cf22 [\cb1\cf0 L\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]] = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ];
\par         \}
\par     \}
\par     \cb3\cf11\b void \b0\cb1\cf0 resume\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 c\cb3\cf22 )
\par     \{
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb1\cf0 U\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ]; \cb1\cf0 i \cb3\cf22 != \cb1\cf0 c\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 = \cb1\cf0 U\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ])
\par         \{
\par             \cb1\cf0 R\cb3\cf22 [\cb1\cf0 L\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]] = \cb1\cf0 L\cb3\cf22 [\cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]] = \cb1\cf0 i\cb3\cf22 ;
\par         \}
\par     \}
\par     \cb3\cf11\b bool \b0\cb1\cf0 v\cb3\cf22 [\cb1\cf0 maxnode\cb3\cf22 ];
\par     \cb3\cf11\b int \b0\cb1\cf0 h\cb3\cf22 ()
\par     \{
\par         \cb3\cf11\b int \b0\cb1\cf0 ret \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ;
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 c \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ]; \cb1\cf0 c \cb3\cf22 != \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 c \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ]) \cb1\cf0 v\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ] = \cb3\cf11\b true\b0\cb3\cf22 ;
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 c \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ]; \cb1\cf0 c \cb3\cf22 != \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 c \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ])
\par         \{
\par             \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 v\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ])
\par             \{
\par                 \cb1\cf0 ret\cb3\cf22 ++;
\par                 \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ]; \cb1\cf0 i \cb3\cf22 != \cb1\cf0 c\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ])
\par                 \{
\par                     \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 j \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]; \cb1\cf0 j \cb3\cf22 != \cb1\cf0 i\cb3\cf22 ; \cb1\cf0 j \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ])
\par                     \{
\par                         \cb1\cf0 v\cb3\cf22 [\cb1\cf0 Col\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ]] = \cb3\cf11\b false\b0\cb3\cf22 ;
\par                     \}
\par                 \}
\par             \}
\par         \}
\par         \cb3\cf11\b return \b0\cb1\cf0 ret\cb3\cf22 ;
\par     \}
\par     \cb3\cf11\b bool \b0\cb1\cf0 dance\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 d\cb3\cf22 )
\par     \{
\par         \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 d \cb3\cf22 + \cb1\cf0 h\cb3\cf22 () > \cb1\cf0 ansd\cb3\cf22 )
\par         \{
\par             \cb3\cf11\b return false\b0\cb3\cf22 ;
\par         \}
\par         \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 R\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ] == \cb3\cf9 0\cb3\cf22 )
\par         \{
\par             \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 ansd \cb3\cf22 > \cb1\cf0 d\cb3\cf22 ) \cb1\cf0 ansd \cb3\cf22 = \cb1\cf0 d\cb3\cf22 ;
\par             \cb3\cf11\b return true\b0\cb3\cf22 ;
\par         \}
\par         \cb3\cf11\b bool \b0\cb1\cf0 ret \cb3\cf22 = \cb3\cf11\b false\b0\cb3\cf22 ;
\par         \cb3\cf11\b int \b0\cb1\cf0 c \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ];
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ]; \cb1\cf0 i \cb3\cf22 != \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ])
\par         \{
\par             \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 S\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] < \cb1\cf0 S\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ])
\par             \{
\par                 \cb1\cf0 c \cb3\cf22 = \cb1\cf0 i\cb3\cf22 ;
\par             \}
\par         \}
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ]; \cb1\cf0 i \cb3\cf22 != \cb1\cf0 c\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ])
\par         \{
\par             \cb3\cf13\b remove\b0\cb3\cf22 (\cb1\cf0 i\cb3\cf22 );
\par             \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 j \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]; \cb1\cf0 j \cb3\cf22 != \cb1\cf0 i\cb3\cf22 ; \cb1\cf0 j \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ])
\par             \{
\par                 \cb3\cf13\b remove\b0\cb3\cf22 (\cb1\cf0 j\cb3\cf22 );
\par             \}
\par             \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 dance\cb3\cf22 (\cb1\cf0 d \cb3\cf22 + \cb3\cf9 1\cb3\cf22 )) \cb1\cf0 ret \cb3\cf22 = \cb3\cf11\b true\b0\cb3\cf22 ;
\par             \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 j \cb3\cf22 = \cb1\cf0 L\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]; \cb1\cf0 j \cb3\cf22 != \cb1\cf0 i\cb3\cf22 ; \cb1\cf0 j \cb3\cf22 = \cb1\cf0 L\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ])
\par             \{
\par                 \cb1\cf0 resume\cb3\cf22 (\cb1\cf0 j\cb3\cf22 );
\par             \}
\par             \cb1\cf0 resume\cb3\cf22 (\cb1\cf0 i\cb3\cf22 );
\par         \}
\par         \cb3\cf11\b return \b0\cb1\cf0 ret\cb3\cf22 ;
\par     \}
\par     \cb3\cf11\b void \b0\cb1\cf0 Dance\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 d\cb3\cf22 )
\par     \{
\par         \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 d \cb3\cf22 + \cb1\cf0 h\cb3\cf22 () >= \cb1\cf0 ansd\cb3\cf22 )\cb3\cf11\b return\b0\cb3\cf22 ;
\par         \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 R\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ] == \cb3\cf9 0\cb3\cf22 )
\par         \{
\par             \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 d \cb3\cf22 < \cb1\cf0 ansd\cb3\cf22 )\cb1\cf0 ansd \cb3\cf22 = \cb1\cf0 d\cb3\cf22 ;
\par             \cb3\cf11\b return\b0\cb3\cf22 ;
\par         \}
\par         \cb3\cf11\b int \b0\cb1\cf0 c \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ];
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ]; \cb1\cf0 i \cb3\cf22 != \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ])
\par             \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 S\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] < \cb1\cf0 S\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ])
\par                 \cb1\cf0 c \cb3\cf22 = \cb1\cf0 i\cb3\cf22 ;
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 c\cb3\cf22 ]; \cb1\cf0 i \cb3\cf22 != \cb1\cf0 c\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 = \cb1\cf0 D\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ])
\par         \{
\par             \cb3\cf13\b remove\b0\cb3\cf22 (\cb1\cf0 i\cb3\cf22 );
\par             \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 j \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]; \cb1\cf0 j \cb3\cf22 != \cb1\cf0 i\cb3\cf22 ; \cb1\cf0 j \cb3\cf22 = \cb1\cf0 R\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ])\cb3\cf13\b remove\b0\cb3\cf22 (\cb1\cf0 j\cb3\cf22 );
\par             \cb1\cf0 Dance\cb3\cf22 (\cb1\cf0 d \cb3\cf22 + \cb3\cf9 1\cb3\cf22 );
\par             \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 j \cb3\cf22 = \cb1\cf0 L\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]; \cb1\cf0 j \cb3\cf22 != \cb1\cf0 i\cb3\cf22 ; \cb1\cf0 j \cb3\cf22 = \cb1\cf0 L\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ])\cb1\cf0 resume\cb3\cf22 (\cb1\cf0 j\cb3\cf22 );
\par             \cb1\cf0 resume\cb3\cf22 (\cb1\cf0 i\cb3\cf22 );
\par         \}
\par     \}
\par \};
\par 
\par \cb1\cf0 DLX gg\cb3\cf22 ;
\par 
\par \cb3\cf5 //Dijkstra, no need to explain, just in case
\par \cb3\cf13 #include<iostream>
\par #include<vector>
\par #include<cstring>
\par #include<functional>
\par #include<algorithm>
\par #include<string>
\par #include<queue>
\par \cb3\cf11\b using namespace \b0\cb3\cf13\b std\b0\cb3\cf22 ;
\par \cb3\cf11\b typedef \b0\cb3\cf13\b pair\b0\cb3\cf22 <\cb3\cf11\b int\b0\cb3\cf22 , \cb3\cf11\b int\b0\cb3\cf22 > \cb1\cf0 pii\cb3\cf22 ;
\par \cb3\cf11\b const int \b0\cb1\cf0 maxn \cb3\cf22 = \cb3\cf9 10005\cb3\cf22 ;
\par \cb3\cf11\b int \b0\cb1\cf0 dis\cb3\cf22 [\cb1\cf0 maxn\cb3\cf22 ];
\par \cb3\cf13\b vector\b0\cb3\cf22 <\cb3\cf11\b int\b0\cb3\cf22 > \cb1\cf0 G\cb3\cf22 [\cb1\cf0 maxn\cb3\cf22 ];
\par \cb3\cf11\b const int \b0\cb1\cf0 inf \cb3\cf22 = \cb3\cf9 0x3f3f3f3f\cb3\cf22 ;
\par \cb3\cf11\b int \b0\cb1\cf0 ecnt\cb3\cf22 ;
\par \cb3\cf11\b struct \b0\cb1\cf0 edge
\par \cb3\cf22 \{
\par     \cb3\cf11\b int \b0\cb1\cf0 from\cb3\cf22 , \cb1\cf0 to\cb3\cf22 , \cb1\cf0 cost\cb3\cf22 ;
\par \};
\par \cb1\cf0 edge es\cb3\cf22 [\cb1\cf0 maxn \cb3\cf22 * \cb1\cf0 maxn\cb3\cf22 ];
\par 
\par \cb3\cf11\b void \b0\cb1\cf0 dijkstra\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 s\cb3\cf22 )
\par \{
\par     \cb3\cf13\b priority_queue\b0\cb3\cf22 <\cb1\cf0 pii\cb3\cf22 , \cb3\cf13\b vector\b0\cb3\cf22 <\cb1\cf0 pii\cb3\cf22 >, \cb3\cf13\b greater\b0\cb3\cf22 <\cb1\cf0 pii\cb3\cf22 > > \cb1\cf0 q\cb3\cf22 ;
\par     \cb1\cf0 q\cb3\cf22 .\cb1\cf0 push\cb3\cf22 (\{\cb3\cf9 0\cb3\cf22 , \cb1\cf0 s\cb3\cf22 \});
\par     \cb1\cf0 dis\cb3\cf22 [\cb1\cf0 s\cb3\cf22 ] = \cb3\cf9 0\cb3\cf22 ;
\par     \cb3\cf11\b while \b0\cb3\cf22 (!\cb1\cf0 q\cb3\cf22 .\cb3\cf13\b empty\b0\cb3\cf22 ())
\par     \{
\par         \cb1\cf0 pii c \cb3\cf22 = \cb1\cf0 q\cb3\cf22 .\cb1\cf0 top\cb3\cf22 ();
\par         \cb1\cf0 q\cb3\cf22 .\cb1\cf0 pop\cb3\cf22 ();
\par         \cb3\cf11\b int \b0\cb1\cf0 cur \cb3\cf22 = \cb1\cf0 c\cb3\cf22 .\cb1\cf0 second\cb3\cf22 ;
\par 
\par         \cb3\cf11\b for \b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 < \cb1\cf0 G\cb3\cf22 [\cb1\cf0 cur\cb3\cf22 ].\cb3\cf13\b size\b0\cb3\cf22 (); \cb1\cf0 i\cb3\cf22 ++)
\par         \{
\par             \cb1\cf0 edge \cb3\cf22 & \cb1\cf0 e \cb3\cf22 = \cb1\cf0 es\cb3\cf22 [\cb1\cf0 G\cb3\cf22 [\cb1\cf0 cur\cb3\cf22 ][\cb1\cf0 i\cb3\cf22 ]];
\par             \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 dis\cb3\cf22 [\cb1\cf0 e\cb3\cf22 .\cb1\cf0 to\cb3\cf22 ] > \cb1\cf0 dis\cb3\cf22 [\cb1\cf0 e\cb3\cf22 .\cb1\cf0 from\cb3\cf22 ] + \cb1\cf0 e\cb3\cf22 .\cb1\cf0 cost\cb3\cf22 )
\par             \{
\par                 \cb1\cf0 dis\cb3\cf22 [\cb1\cf0 e\cb3\cf22 .\cb1\cf0 to\cb3\cf22 ] = \cb1\cf0 dis\cb3\cf22 [\cb1\cf0 e\cb3\cf22 .\cb1\cf0 from\cb3\cf22 ] + \cb1\cf0 e\cb3\cf22 .\cb1\cf0 cost\cb3\cf22 ;
\par                 \cb1\cf0 q\cb3\cf22 .\cb1\cf0 push\cb3\cf22 (\{\cb1\cf0 dis\cb3\cf22 [\cb1\cf0 e\cb3\cf22 .\cb1\cf0 to\cb3\cf22 ],\cb1\cf0 e\cb3\cf22 .\cb1\cf0 to\cb3\cf22 \});
\par             \}
\par         \}
\par 
\par     \}
\par \}
\par \cb3\cf11\b void \b0\cb1\cf0 init\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 n\cb3\cf22 )
\par \{
\par     \cb1\cf0 ecnt \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ;
\par     \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 < \cb1\cf0 n\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par     \{
\par         \cb1\cf0 G\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ].\cb3\cf13\b clear\b0\cb3\cf22 ();
\par     \}
\par     \cb1\cf0 memset\cb3\cf22 (\cb1\cf0 dis\cb3\cf22 , \cb1\cf0 inf\cb3\cf22 , \cb3\cf11\b sizeof\b0\cb3\cf22 (\cb1\cf0 dis\cb3\cf22 ));
\par \}
\par \cb3\cf11\b void \b0\cb1\cf0 addedge\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 u\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 v\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 w\cb3\cf22 )
\par \{
\par     \cb1\cf0 es\cb3\cf22 [\cb1\cf0 ecnt\cb3\cf22 ] = \{\cb1\cf0 u\cb3\cf22 , \cb1\cf0 v\cb3\cf22 , \cb1\cf0 w\cb3\cf22 \};
\par     \cb1\cf0 G\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ].\cb3\cf13\b push_back\b0\cb3\cf22 (\cb1\cf0 ecnt\cb3\cf22 ++);
\par \}
\par 
\par 
\par \cb3\cf5 //Part2
\par //Graph Algorithms
\par //Some Maxi(Mini)mize Tools
\par 
\par //Bidirectional Connected Component
\par 
\par 
\par \cb3\cf11\b int \b0\cb1\cf0 pre\cb3\cf22 [\cb1\cf0 maxn\cb3\cf22 ], \cb1\cf0 iscur\cb3\cf22 [\cb1\cf0 maxn\cb3\cf22 ], \cb1\cf0 bccno\cb3\cf22 [\cb1\cf0 maxn\cb3\cf22 ], \cb1\cf0 dfs_clock\cb3\cf22 , \cb1\cf0 bcc_cnt\cb3\cf22 ;
\par \cb3\cf13\b vector\b0\cb3\cf22 <\cb3\cf11\b int\b0\cb3\cf22 > \cb1\cf0 G\cb3\cf22 [\cb1\cf0 maxn\cb3\cf22 ], \cb1\cf0 bcc\cb3\cf22 [\cb1\cf0 maxn\cb3\cf22 ];
\par 
\par \cb3\cf13\b stack\b0\cb3\cf22 <\cb1\cf0 edge\cb3\cf22 > \cb1\cf0 s\cb3\cf22 ;
\par \cb3\cf11\b int \b0\cb1\cf0 dfs\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 u\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 fa\cb3\cf22 )
\par \{
\par     \cb3\cf11\b int \b0\cb1\cf0 lowu \cb3\cf22 = \cb1\cf0 pre\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ] = ++\cb1\cf0 dfs_clock\cb3\cf22 ;
\par     \cb3\cf11\b int \b0\cb1\cf0 child \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ;
\par     \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 0 \cb3\cf22 ; \cb1\cf0 i \cb3\cf22 < \cb1\cf0 G\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ].\cb3\cf13\b size\b0\cb3\cf22 ();\cb1\cf0 i\cb3\cf22 ++)
\par     \{
\par         \cb3\cf11\b int \b0\cb1\cf0 v\cb3\cf22 = \cb1\cf0 G\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ][\cb1\cf0 i\cb3\cf22 ];
\par         \cb1\cf0 edge e \cb3\cf22 = (\cb1\cf0 edge\cb3\cf22 ) \{\cb1\cf0 u\cb3\cf22 , \cb1\cf0 v\cb3\cf22 \};
\par         \cb3\cf11\b if\b0\cb3\cf22 (!\cb1\cf0 pre\cb3\cf22 [\cb1\cf0 v\cb3\cf22 ])
\par         \{
\par             \cb1\cf0 s\cb3\cf22 .\cb1\cf0 push\cb3\cf22 (\cb1\cf0 e\cb3\cf22 );
\par             \cb1\cf0 child\cb3\cf22 ++;
\par             \cb3\cf11\b int \b0\cb1\cf0 lowv \cb3\cf22 = \cb1\cf0 dfs\cb3\cf22 (\cb1\cf0 v\cb3\cf22 , \cb1\cf0 u\cb3\cf22 );
\par             \cb1\cf0 lowu \cb3\cf22 = \cb3\cf13\b min\b0\cb3\cf22 (\cb1\cf0 lowu\cb3\cf22 , \cb1\cf0 lowv\cb3\cf22 );
\par             \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 lowv \cb3\cf22 >= \cb1\cf0 pre\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ])
\par             \{
\par                 \cb1\cf0 iscut\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ] = \cb3\cf11\b true\b0\cb3\cf22 ;
\par                 \cb1\cf0 bcc_cnt\cb3\cf22 ++;
\par                 \cb1\cf0 bcc\cb3\cf22 [\cb1\cf0 bcc_cnt\cb3\cf22 ].\cb3\cf13\b clear\b0\cb3\cf22 ();
\par                 \cb3\cf11\b for\b0\cb3\cf22 (;;)
\par                 \{
\par                     \cb1\cf0 edge x \cb3\cf22 = \cb1\cf0 s\cb3\cf22 .\cb1\cf0 top\cb3\cf22 (); \cb1\cf0 s\cb3\cf22 .\cb1\cf0 pop\cb3\cf22 ();
\par                     \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 bccno\cb3\cf22 [\cb1\cf0 x\cb3\cf22 .\cb1\cf0 u\cb3\cf22 ] != \cb1\cf0 bcc_cnt\cb3\cf22 )
\par                     \{
\par                         \cb1\cf0 bcc\cb3\cf22 [\cb1\cf0 bcc_cnt\cb3\cf22 ].\cb3\cf13\b push_back\b0\cb3\cf22 (\cb1\cf0 x\cb3\cf22 .\cb1\cf0 u\cb3\cf22 );
\par                         \cb1\cf0 bccno\cb3\cf22 [\cb1\cf0 x\cb3\cf22 .\cb1\cf0 u\cb3\cf22 ] = \cb1\cf0 bcc_cnt\cb3\cf22 ;
\par                     \}
\par                     \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 bccno\cb3\cf22 [\cb1\cf0 x\cb3\cf22 .\cb1\cf0 v\cb3\cf22 ] != \cb1\cf0 bcc_cnt\cb3\cf22 )
\par                     \{
\par                         \cb1\cf0 bcc\cb3\cf22 [\cb1\cf0 bcc_cnt\cb3\cf22 ].\cb3\cf13\b push_back\b0\cb3\cf22 (\cb1\cf0 x\cb3\cf22 .\cb1\cf0 v\cb3\cf22 );
\par                         \cb1\cf0 bccno\cb3\cf22 [\cb1\cf0 x\cb3\cf22 .\cb1\cf0 v\cb3\cf22 ] = \cb1\cf0 bcc_cnt\cb3\cf22 ;
\par                     \}
\par                     \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 x\cb3\cf22 .\cb1\cf0 u \cb3\cf22 == \cb1\cf0 u \cb3\cf22 && \cb1\cf0 x\cb3\cf22 .\cb1\cf0 v \cb3\cf22 == \cb1\cf0 v\cb3\cf22 )
\par                     \{
\par                         \cb3\cf11\b break\b0\cb3\cf22 ;
\par                     \}
\par                 \}
\par             \}
\par             \cb3\cf11\b else if\b0\cb3\cf22 (\cb1\cf0 pre\cb3\cf22 [\cb1\cf0 v\cb3\cf22 ] < \cb1\cf0 pre\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ] && \cb1\cf0 v \cb3\cf22 != \cb1\cf0 fa\cb3\cf22 )
\par             \{
\par                 \cb1\cf0 S\cb3\cf22 .\cb1\cf0 push\cb3\cf22 (\cb1\cf0 e\cb3\cf22 );
\par                 \cb1\cf0 lowu \cb3\cf22 = \cb3\cf13\b min\b0\cb3\cf22 (\cb1\cf0 lowu\cb3\cf22 , \cb1\cf0 pre\cb3\cf22 [\cb1\cf0 v\cb3\cf22 ]);
\par             \}
\par         \}
\par         \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 fa \cb3\cf22 < \cb3\cf9 0 \cb3\cf22 && \cb1\cf0 child \cb3\cf22 == \cb3\cf9 1\cb3\cf22 )
\par         \{
\par             \cb1\cf0 iscut\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ] = \cb3\cf9 0\cb3\cf22 ;
\par         \}
\par     \}
\par     \cb3\cf11\b return \b0\cb1\cf0 lowu\cb3\cf22 ;
\par \}
\par \cb3\cf11\b void \b0\cb1\cf0 find_bcc\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 u\cb3\cf22 )
\par \{
\par     \cb1\cf0 memset\cb3\cf22 (\cb1\cf0 pre\cb3\cf22 , \cb3\cf9 0\cb3\cf22 , \cb3\cf11\b sizeof\b0\cb3\cf22 (\cb1\cf0 pre\cb3\cf22 ));
\par     \cb1\cf0 memset\cb3\cf22 (\cb1\cf0 iscut\cb3\cf22 , \cb3\cf9 0\cb3\cf22 , \cb3\cf11\b sizeof\b0\cb3\cf22 (\cb1\cf0 iscut\cb3\cf22 ));
\par     \cb1\cf0 memset\cb3\cf22 (\cb1\cf0 bccno\cb3\cf22 , \cb3\cf9 0\cb3\cf22 , \cb3\cf11\b sizeof\b0\cb3\cf22 (\cb1\cf0 bccno\cb3\cf22 ));
\par     \cb1\cf0 dfs_clock \cb3\cf22 = \cb1\cf0 bcc_cnt \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ;
\par     \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 < \cb1\cf0 n\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par     \{
\par         \cb3\cf11\b if\b0\cb3\cf22 (!\cb1\cf0 pre\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]) \cb1\cf0 dfs\cb3\cf22 (\cb1\cf0 i\cb3\cf22 , -\cb3\cf9 1\cb3\cf22 );
\par     \}
\par \}
\par 
\par \cb3\cf5 //
\par //TODO : Strong Connect Component // looking to Stanford notebook
\par 
\par 
\par // Binary indexed tree for interval queries
\par //looking to Stanford notebook
\par 
\par 
\par //find cuts
\par 
\par 
\par \cb3\cf11\b int \b0\cb1\cf0 dfs_clock\cb3\cf22 ;
\par \cb3\cf11\b int \b0\cb1\cf0 dfs\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 u\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 fa\cb3\cf22 )
\par \{
\par     \cb3\cf11\b int \b0\cb1\cf0 lowu \cb3\cf22 = \cb1\cf0 pre\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ] = ++\cb1\cf0 dfs_clock\cb3\cf22 ;\cb3\cf5 //
\par     \cb3\cf11\b int \b0\cb1\cf0 child \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ;
\par     \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 < \cb1\cf0 G\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ].\cb3\cf13\b size\b0\cb3\cf22 (); \cb1\cf0 i\cb3\cf22 ++)
\par     \{
\par         \cb3\cf11\b int \b0\cb1\cf0 v \cb3\cf22 = \cb1\cf0 G\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ][\cb1\cf0 i\cb3\cf22 ];
\par         \cb3\cf11\b if\b0\cb3\cf22 (!\cb1\cf0 pre\cb3\cf22 [\cb1\cf0 v\cb3\cf22 ])\cb3\cf5 //have not been visited
\par         \cb3\cf22 \{
\par             \cb1\cf0 child\cb3\cf22 ++;
\par             \cb3\cf11\b int \b0\cb1\cf0 lowv \cb3\cf22 = \cb1\cf0 dfs\cb3\cf22 (\cb1\cf0 v\cb3\cf22 , \cb1\cf0 u\cb3\cf22 );
\par             \cb1\cf0 lowu \cb3\cf22 = \cb3\cf13\b min\b0\cb3\cf22 (\cb1\cf0 lowu\cb3\cf22 , \cb1\cf0 lowv\cb3\cf22 );
\par             \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 lowv \cb3\cf22 >= \cb1\cf0 pre\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ])
\par             \{
\par                 \cb1\cf0 iscut\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ] = \cb3\cf11\b true\b0\cb3\cf22 ;
\par             \}
\par         \}
\par         \cb3\cf11\b else if\b0\cb3\cf22 (\cb1\cf0 pre\cb3\cf22 [\cb1\cf0 v\cb3\cf22 ] < \cb1\cf0 pre\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ] && \cb1\cf0 v \cb3\cf22 != \cb1\cf0 fa\cb3\cf22 )
\par         \{
\par             \cb1\cf0 lowu \cb3\cf22 = \cb3\cf13\b min\b0\cb3\cf22 (\cb1\cf0 lowu\cb3\cf22 , \cb1\cf0 pre\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ]);
\par         \}
\par     \}
\par     \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 fa \cb3\cf22 < \cb3\cf9 0 \cb3\cf22 && \cb1\cf0 child \cb3\cf22 == \cb3\cf9 1\cb3\cf22 )
\par     \{
\par         \cb1\cf0 iscut\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ] = \cb3\cf9 0\cb3\cf22 ;
\par     \}
\par     \cb1\cf0 low\cb3\cf22 [\cb1\cf0 u\cb3\cf22 ] = \cb1\cf0 lowu\cb3\cf22 ;
\par     \cb3\cf11\b return \b0\cb1\cf0 lowu\cb3\cf22 ;
\par \}
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par }